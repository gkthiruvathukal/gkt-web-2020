@book{ChristopherThiruvathukalHPJava,
  abbr           = {Book},
  html           = {https://ecommons.luc.edu/cs_facpubs/3/},
  pdf            = {https://ecommons.luc.edu/cs_facpubs/3/},
  abstract       = {Threading and concurrency are crucial to building high-performance Java applications -- but they have a reputation for complexity. High Performance Java Computing thoroughly demystifies these advanced development techniques. It delivers practical programming solutions, proven design patterns, and a rigorously-tested code library -- everything developers need to build optimized Java software for technical, business, and E-commerce applications. Start by understanding how threading and concurrency can be used to solve a wide variety of performance problems, enabling the construction of more powerful networked applications. Master the Java 2 Threads classes, including daemon threads, thread control, scheduling, and more. Review the key problems of parallelism -- including deadlocks, race conditions, and synchronization -- and discover proven techniques for avoiding or resolving them. Finally, master advanced techniques for building optimized concurrent code, including Java monitors, parallel execution of subroutines in shared memory, and parallelizing loops.},
  author         = {Thomas W. Christopher and George K. Thiruvathukal},
  title          = {High-Performance Java Platform Computing: Threads and Networking},
  publisher      = {Prentice Hall PTR and Sun Microsystems Press},
  year           = {2000}
}

@book{ChristopherThiruvathukalShafaeeWPP,
  abbr           = {Edited Book},
  author         = {Thomas W. Christopher and George K. Thiruvathukal and John P. Shafaee},
  title          = {Web Programming in Python: Techniques for Integrating Linux, Apache Web Server, and MySQL},
  publisher      = {Prentice Hall PTR and Sun Microsystems Press},
  year           = {2000},
  abstract       = {Still working to make the HTML and PDF available for this out of print book.}
}

@book{SE4ScienceBook,
  abbr = {Book},
  html = {https://ecommons.luc.edu/cs_facpubs/128/},
  pdf = {https://ecommons.luc.edu/cs_facpubs/128/},
  author         = {Jeffrey C. Carver and Neil P. Chue Hong and George K. Thiruvathukal},
  title          = {Software Engineering for Science},
  publisher      = {Taylor and Francis/CRC Press},
  year           = {2016},
  abstract       = {Software Engineering for Science provides an in-depth collection of peer-reviewed chapters that describe experiences with applying software engineering practices to the development of scientific software. It provides a better understanding of how software engineering is and should be practiced, and which software engineering practices are effective for scientific software.
The book starts with a detailed overview of the Scientific Software Lifecycle, and a general overview of the scientific software development process. It highlights key issues commonly arising during scientific software development, as well as solutions to these problems.
The second part of the book provides examples of the use of testing in scientific software development, including key issues and challenges. The chapters then describe solutions and case studies aimed at applying testing to scientific software development efforts.
The final part of the book provides examples of applying software engineering techniques to scientific software, including not only computational modeling, but also software for data management and analysis. The authors describe their experiences and lessons learned from developing complex scientific software in different domains.},
}

@book{CodenameRevolution,
  abbr={Book},
  html={https://mitpress.mit.edu/books/codename-revolution},
  author         = {Steven E. Jones and George K. THiruvathukal},
  title          = {Codename Revolution: The Nintendo Wii Platform},
  publisher      = {MIT Press, Platform Studies Series},
  year           = {2012},
  abstract = {Summary
Nintendo's hugely popular and influential video game console system considered as technological device and social phenomenon.
The Nintendo Wii, introduced in 2006, helped usher in a moment of retro-reinvention in video game play. This hugely popular console system, codenamed Revolution during development, signaled a turn away from fully immersive, time-consuming MMORPGs or forty-hour FPS games and back toward family fun in the living room. Players using the wireless motion-sensitive controller (the Wii Remote, or “Wiimote”) play with their whole bodies, waving, swinging, swaying. The mimetic interface shifts attention from what's on the screen to what's happening in physical space. This book describes the Wii's impact in technological, social, and cultural terms, examining the Wii as a system of interrelated hardware and software that was consciously designed to promote social play in physical space.
Each chapter of Codename Revolution focuses on a major component of the Wii as a platform: the console itself, designed to be low-powered and nimble; the iconic Wii Remote; Wii Fit Plus, and its controller, the Wii Balance Board; the Wii Channels interface and Nintendo's distribution system; and the Wii as a social platform that not only affords multiplayer options but also encourages social interaction in shared physical space. Finally, the authors connect the Wii's revolution in mimetic interface gaming—which eventually led to the release of Sony's Move and Microsoft's Kinect—to some of the economic and technological conditions that influence the possibility of making something new in this arena of computing and culture.
},
}