@book{ChristopherThiruvathukalHPJava,
  abbr           = {Book},
  html           = {https://ecommons.luc.edu/cs_facpubs/3/},
  pdf            = {https://ecommons.luc.edu/cs_facpubs/3/},
  abstract       = {Threading and concurrency are crucial to building high-performance Java applications -- but they have a reputation for complexity. High Performance Java Computing thoroughly demystifies these advanced development techniques. It delivers practical programming solutions, proven design patterns, and a rigorously-tested code library -- everything developers need to build optimized Java software for technical, business, and E-commerce applications. Start by understanding how threading and concurrency can be used to solve a wide variety of performance problems, enabling the construction of more powerful networked applications. Master the Java 2 Threads classes, including daemon threads, thread control, scheduling, and more. Review the key problems of parallelism -- including deadlocks, race conditions, and synchronization -- and discover proven techniques for avoiding or resolving them. Finally, master advanced techniques for building optimized concurrent code, including Java monitors, parallel execution of subroutines in shared memory, and parallelizing loops.},
  author         = {Thomas W. Christopher and George K. Thiruvathukal},
  title          = {High-Performance Java Platform Computing: Threads and Networking},
  publisher      = {Prentice Hall PTR and Sun Microsystems Press},
  year           = {2000}
}

@book{ChristopherThiruvathukalShafaeeWPP,
  abbr           = {Edited Book},
  author         = {Thomas W. Christopher and George K. Thiruvathukal and John P. Shafaee},
  title          = {High-Performance Java Platform Computing: Threads and Networking},
  publisher      = {Prentice Hall PTR and Sun Microsystems Press},
  year           = {2000}
}

@book{SE4ScienceBook,
  abbr = {Book},
  html = {https://ecommons.luc.edu/cs_facpubs/128/},
  pdf = {https://ecommons.luc.edu/cs_facpubs/128/},
  author         = {Jeffrey C. Carver and Neil P. Chue Hong and George K. Thiruvathukal},
  title          = {Software Engineering for Science},
  publisher      = {Taylor and Francis/CRC Press},
  year           = {2016},
  abstract       = {Software Engineering for Science provides an in-depth collection of peer-reviewed chapters that describe experiences with applying software engineering practices to the development of scientific software. It provides a better understanding of how software engineering is and should be practiced, and which software engineering practices are effective for scientific software.
The book starts with a detailed overview of the Scientific Software Lifecycle, and a general overview of the scientific software development process. It highlights key issues commonly arising during scientific software development, as well as solutions to these problems.
The second part of the book provides examples of the use of testing in scientific software development, including key issues and challenges. The chapters then describe solutions and case studies aimed at applying testing to scientific software development efforts.
The final part of the book provides examples of applying software engineering techniques to scientific software, including not only computational modeling, but also software for data management and analysis. The authors describe their experiences and lessons learned from developing complex scientific software in different domains.},
}

@book{CodenameRevolution,
  abbr={Book}, 
  author         = {Steven E. Jones and George K. THiruvathukal},
  title          = {Codename Revolution: The Nintendo Wii Platform},
  publisher      = {MIT Press, Platform Studies Series},
  year           = {2012}
}