@book{carver_hong_thiruvathukal_se4science_2017,
 abbr = {Books},
 abstract = {Software Engineering for Science provides an in-depth collection of peer-reviewed chapters that describe with applying software engineering practices to the development of scientifi software. It provides a better understanding of how software engineering is and should be practiced, and which software engineering practices are effective for scientific software. The book starts with a detailed overview of the Scientific Software Lifecycle, and a general overview of the scientific software development process. It highlights key issues commonly arising during scientific software development, as well as solutions to these problems. The second part of the book provides examples of the use of testing in scientific software development, including key issues and challenges.},
 author = {Carver, Jeffrey and Hong, Neil P. Chue  and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-1-4987-4385-3},
 publisher = {{Taylor \& Francis/CRC Press}},
 title = {Software {{Engineering}} for {{Science}}},
 year = {2017},
 url = {https://ecommons.luc.edu/cs_facpubs/128/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/128/},
 website = {https://www.routledge.com/Software-Engineering-for-Science/Carver-Hong-Thiruvathukal/p/book/9780367574277},
}

@book{jones_thiruvathukal_wii_2012,
 abbr = {Books},
 author = {Jones, Steven E. and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 publisher = {{MIT Press}},
 shorttitle = {{Codename Revolution}},
 title = {{Codename Revolution: The Nintendo WII Platform (Platform Studies)}},
 year = {2012},
 isbn = {978-0-26-201680-3},
 url = {https://mitpress.mit.edu/books/codename-revolution},
 website = {https://mitpress.mit.edu/books/codename-revolution},
 abstract = { Nintendo's hugely popular and influential video game console system considered as technological device and social phenomenon.
The Nintendo Wii, introduced in 2006, helped usher in a moment of retro-reinvention in video game play. This hugely popular console system, codenamed Revolution during development, signaled a turn away from fully immersive, time-consuming MMORPGs or forty-hour FPS games and back toward family fun in the living room. Players using the wireless motion-sensitive controller (the Wii Remote, or “Wiimote”) play with their whole bodies, waving, swinging, swaying. The mimetic interface shifts attention from what's on the screen to what's happening in physical space. This book describes the Wii's impact in technological, social, and cultural terms, examining the Wii as a system of interrelated hardware and software that was consciously designed to promote social play in physical space.
Each chapter of Codename Revolution focuses on a major component of the Wii as a platform: the console itself, designed to be low-powered and nimble; the iconic Wii Remote; Wii Fit Plus, and its controller, the Wii Balance Board; the Wii Channels interface and Nintendo's distribution system; and the Wii as a social platform that not only affords multiplayer options but also encourages social interaction in shared physical space. Finally, the authors connect the Wii's revolution in mimetic interface gaming—which eventually led to the release of Sony's Move and Microsoft's Kinect—to some of the economic and technological conditions that influence the possibility of making something new in this arena of computing and culture.},
}

@book{thiruvathukal_shafaee_christopher_wpp_2002,
 abbr = {Books},
 address = {Upper Saddle River, NJ},
 author = {Thiruvathukal, George K. and Shafaee, John P. and Christopher, Thomas W.},
 copyright = {All rights reserved},
 isbn = {978-0-13-041065-8},
 publisher = {Prentice Hall},
 title = {Web Programming: Techniques for Integrating Python, Linux, Apache, and MySQL},
 year = {2002},
 abstract = {This book was published in 2002 and is now out of print. Full rights have been reverted back to the authors from Prentice Hall PTR (now part of Pearson). Web Programming in Python was an early book on how to develop web applications using Python via a more integrated, framework-based approach. It provides a self-contained introduction to Python, Linux, MySQL (database programming and SQL), and Apache Web Server. We get many requests to make this book available. The world has since moved on to many other web frameworks (with a great emphasis on JavaScript) but as authors are committed to preserving knowledge and long-term digital archival. We thank our past readers for their support. Please direct any queries to George K. Thiruvathukal.},
 url = {https://ecommons.luc.edu/cs_facpubs/267/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/267/},

}

@book{christopher_thiruvathukal_hpjpc_2000,
 abbr = {Books},
 author = {Christopher, Thomas W. and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-0-13-016164-2},
 publisher = {Prentice Hall PTR and Sun Microsystems Press},
 shorttitle = {High {Performance Java Computing}},
 title = {High Performance Java Computing: Multi-Threaded and Networked Programming},
 year = {2000},
 url = {https://ecommons.luc.edu/cs_facpubs/3/},
 html = {https://ecommons.luc.edu/cs_facpubs/3/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/3/},
 abstract = {Threading and concurrency are crucial to building high-performance Java applications -- but they have a reputation for complexity. High Performance Java Computing thoroughly demystifies these advanced development techniques. It delivers practical programming solutions, proven design patterns, and a rigorously-tested code library -- everything developers need to build optimized Java software for technical, business, and E-commerce applications. Start by understanding how threading and concurrency can be used to solve a wide variety of performance problems, enabling the construction of more powerful networked applications. Master the Java 2 Threads classes, including daemon threads, thread control, scheduling, and more. Review the key problems of parallelism -- including deadlocks, race conditions, and synchronization -- and discover proven techniques for avoiding or resolving them. Finally, master advanced techniques for building optimized concurrent code, including Java monitors, parallel execution of subroutines in shared memory, and parallelizing loops.}
}

@inproceedings{west-ipsn-2021,
abbr = {ACM},
selected = {true},
author = {West, Jack and Lee, Kyuin and Banerjee, Suman and Kim, Younghyun and Thiruvathukal, George K. and and Klingensmith, Neil},
title = {Moonshine: An Online Randomness Distiller for Zero-Involvement Authentication},
year = {2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://ecommons.luc.edu/cs_facpubs/270/},
doi = {TBD},
abstract = {Context-based authentication is a method for transparently validating another device's legitimacy to join a network based on location. Devices can pair with one another by continuously harvesting environmental noise to generate a random key with no user involvement. However, there are gaps in our understanding of the theoretical limitations of environmental noise harvesting, making it difficult for researchers to build efficient algorithms for sampling environmental noise and distilling keys from that noise. This work explores the information-theoretic capacity of context-based authentication mechanisms to generate random bit strings from environmental noise sources with known properties. Using only mild assumptions about the source process's characteristics, we demonstrate that commonly-used bit extraction algorithms extract only about 10\% of the available randomness from a source noise process. We present an efficient algorithm to improve the quality of keys generated by context-based methods and evaluate it on real key extraction hardware. Moonshine is a randomness distiller which is more efficient at extracting bits from an environmental entropy source than existing methods. Our techniques nearly double the quality of keys as measured by the NIST test suite, producing keys that can be used in real-world authentication scenarios.},
booktitle = {Information Processing in Sensor Networks 2021 (IPSN 2021)},
url = {https://ecommons.luc.edu/cs_facpubs/270/},
pdf = {https://ecommons.luc.edu/cs_facpubs/270/},
}
@inproceedings{ParCo2019,
 abbr = {Conference},
 abstract = {The interdisciplinary field of neuroscience has made significantprogress in recent decades, providing the scientific community in gen-eral with a new level of understanding on how the brain works beyondthe  store-and-fire  model  found  in  traditional  neural  networks.  Mean-while,  Machine  Learning  (ML)  based  on  established  models  has  seena  surge  of  interest  in  the  High  Performance  Computing  (HPC)  com-munity,  especially  through  the  use  of  high-end  accelerators,  such  asGraphical  Processing  Units  (GPUs),  including  HPC  clusters  of  same.In our work, we are motivated to exploit these high-performance com-puting  developments  and  understand  the  scaling  challenges  for  new–biologically inspired–learning models on leadership-class HPC resources.These  emerging  models  feature  sparse  and  random  connectivity  pro-files  that  map  to  more  loosely-coupled  parallel  architectures  with  alarge number of CPU cores per node. Contrasted with traditional MLcodes, these methods exploit loosely-coupled sparse data structures asopposed  to  tightly-coupled  dense  matrix  computations,  which  benefitfrom SIMD-style parallelism found on GPUs. In this paper we introducea hybrid Message Passing Interface (MPI) and Open Multi-Processing(OpenMP) parallelization scheme to accelerate and scale our computa-tional model based on the dynamics of cortical tissue. We ran compu-tational tests on a leadership class visualization and analysis cluster atArgonne National Laboratory. We include a study of strong and weakscaling, where we obtained parallel efficiency measures with a minimumabove 87\% and a maximum above 97\% for simulations of our biologicallyinspired neural network on up to 64 computing nodes running 8 threadseach. This study shows promise of the MPI+OpenMP hybrid approachto support flexible and biologically-inspired computational experimen-tal scenarios. In addition, we present the viability in the application ofthese strategies in high-end leadership computers in the future.},
 author = {Dematties, Dario and Thiruvathukal, George K. and Rizzi, Silvio B. and Wainselboim, Alejandro and Zanutto, B. Silvano},
 booktitle = {Parallel Computing: Technology Trends},
 editor = {Ian Foster and Gerhard R. Joubert and Luděk Kučera and Wolfgang E. Nagel and Frans Peter},
 url = {https://ecommons.luc.edu/cs_facpubs/242/},
 html = {https://ecommons.luc.edu/cs_facpubs/242/},
 pages = {497-506},
 title = {Towards High-End Scalability on Biologically-Inspired Computational ModelsAuthors},
 year = {2020}
}

@inproceedings{10.1145/3409251.3411724,
abbr = {ACM},
author = {Abegaz, Brook and Chan-Tin, Eric and Klingensmith, Neil and Thiruvathukal, George K.},
title = {Addressing Rogue Vehicles by Integrating Computer Vision, Activity Monitoring, and Contextual Information},
year = {2020},
isbn = {9781450380669},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3409251.3411724},
doi = {10.1145/3409251.3411724},
abstract = { In this paper, we address the detection of rogue autonomous vehicles using an integrated approach involving computer vision, activity monitoring and contextual information. The proposed approach can be used to detect rogue autonomous vehicles using sensors installed on observer vehicles that are used to monitor and identify the behavior of other autonomous vehicles operating on the road. The safe braking distance and the safe following time are computed to identify if an autonomous vehicle is behaving properly. Our preliminary results show that there is a wide variation in both the safe following time and the safe braking distance recorded using three autonomous vehicles in a test-bed. These initial results show significant progress for the future efforts to coordinate the operation of autonomous, semi-autonomous and non-autonomous vehicles.},
booktitle = {12th International Conference on Automotive User Interfaces and Interactive Vehicular Applications},
pages = {62–64},
numpages = {3},
keywords = {Monitoring, Autonomous Vehicles, Rogue Vehicle, Sensors},
location = {Virtual Event, DC, USA},
series = {AutomotiveUI '20},
url = {https://ecommons.luc.edu/cs_facpubs/266/},
pdf = {https://ecommons.luc.edu/cs_facpubs/266/},
}
@inproceedings{9221198,
 abbr = {IEEE Conference},
 abstract = {Deep neural networks (DNNs) are successful in many computer vision tasks. However, the most accurate DNNs require millions of parameters and operations, making them energy, computation and memory intensive. This impedes the deployment of large DNNs in low-power devices with limited compute resources. Recent research improves DNN models by reducing the memory requirement, energy consumption, and number of operations without significantly decreasing the accuracy. This paper surveys the progress of low-power deep learning and computer vision, specifically in regards to inference, and discusses the methods for compacting and accelerating DNN models. The techniques can be divided into four major categories: (1) parameter quantization and pruning, (2) compressed convolutional filters and matrix factorization, (3) network architecture search, and (4) knowledge distillation. We analyze the accuracy, advantages, disadvantages, and potential solutions to the problems with the techniques in each category. We also discuss new evaluation metrics as a guideline for future research.},
 author = {Goel, Abhinav and Tung, Caleb and Lu, Yung-Hsiang and Thiruvathukal, George K.},
 booktitle = {2020 IEEE 6th World Forum on Internet of Things (WF-IoT)},
 doi = {10.1109/WF-IoT48130.2020.9221198},
 url = {http://ecommons.luc.edu/cs_facpubs/241},
 html = {http://ecommons.luc.edu/cs_facpubs/241},
 issn = {},
 keywords = {computer vision;learning (artificial intelligence);matrix decomposition;neural nets;knowledge distillation;network architecture search;matrix factorization;compressed convolutional filters;parameter quantization and pruning;computer vision tasks;deep neural networks;DNN models;low-power deep learning;energy consumption;memory requirement;low-power devices;neural networks;computer vision;low-power},
 month = {6},
 number = {},
 pages = {1-6},
 selected = {true},
 title = {A Survey of Methods for Low-Power Deep Learning and Computer Vision},
 volume = {},
 year = {2020}
}

@inproceedings{9202837,
 abbr = {IEEE Conference},
 author = {Chakraborty, Aditya and Pawar, Akshay and Jang, Hojoung and Huang, Shunqiao and Mishra, Sripath and Chen Shuo-Han and Chang, Yan-Hao and Thiruvathukal, George K. and Lu, Yung-Hsiang},
 abstract = {Most of the existing video storage systems rely on offline processing to support the feature-based indexing on video streams. The feature-based indexing technique provides an effective way for users to search video content through visual features, such as object categories (e.g., cars and persons). However, due to the reliance on offline processing, video streams along with their captured features cannot be searchable immediately after video streams are recorded. According to our investigation, buffering and storing live video steams are more time-consuming than the YOLO v3 object detector. Such observation motivates us to propose a real-time feature indexing (RTFI) system to enable instantaneous feature-based indexing on live video streams after video streams are captured and processed through object detectors. RTFI achieves its real-time goal via incorporating the novel design of metadata structure and data placement, the capability of modern object detector (i.e., YOLO v3), and the deduplication techniques to avoid storing repetitive video content. Notably, RTFI is the first system design for realizing real-time feature-based indexing on live video streams. RTFI is implemented on a Linux server and can improve the system throughput by upto 10.60x, compared with the base system without the proposed design. In addition, RTFI is able to make the video content searchable within 20 milliseconds for 10 live video streams after the video content is received by the proposed system, excluding the network transfer latency.},
 doi = {10.1109/COMPSAC48688.2020.00016},
 url = {http://ecommons.luc.edu/cs_facpubs/249},
 html = {http://ecommons.luc.edu/cs_facpubs/249},
 issn = {0730-3157},
 keywords = {feature extraction;indexing;Linux;meta data;object detection;storage management;video signal processing;video streaming;RTFI;base system;video content search;real-time feature indexing system;offline processing;visual features;video storage systems;real-time feature-based indexing technique;YOLO v3 object detector;live video streams capture;metadata structure;data placement;deduplication techniques;repetitive video content storage;Linux server;network transfer latency;Streaming media;Indexing;Detectors;Feature extraction;Object detection;Real-time systems;Automobiles;object detection;data storage;real-time;feature-bassed indexing},
 month = {7},
 number = {},
 pages = {42-50},
 pdf = {http://ecommons.luc.edu/cs_facpubs/249},
 title = {A Real-Time Feature Indexing System on Live Video Streams},
 volume = {},
 booktitle = {2020 IEEE 44th Annual Computers, Software, and Applications Conference (COMPSAC)},
 year = {2020}
}

@inproceedings{9190851,
 abbr = {IEEE Conference},
 abstract = {In the blooming era of smart edge devices, surveillance cameras have been deployed in many locations. Surveillance cameras are most useful when they are spaced out to maximize coverage of an area. However, deciding where to place cameras is an NP-hard problem and researchers have proposed heuristic solutions. Existing work does not consider a significant restriction of computer vision: in order to track a moving object, the object must occupy enough pixels. The number of pixels depends on many factors (How far away is the object? What is the camera resolution? What is the focal length?). In this study, we propose a camera placement method that identifies effective camera placement in arbitrary spaces and can account for different camera types as well. Our strategy represents spaces as polygons, then uses a greedy algorithm to partition the polygons and determine the cameras’ locations to provide the desired coverage. Our solution also makes it possible to perform object tracking via overlapping camera placement. Our method is evaluated against complex shapes and real-world museum floor plans, achieving up to 85\% coverage and 25\% overlap.},
 author = {Aghajanzadeh, Sara and Naidu, Roopasree and Chen, Shuo-Han and Tung, Caleb and Goel, Abhinav and Lu, Yung-Hsiang and Thiruvathukal, George K.},
 booktitle = {2020 IEEE International Conference on Image Processing (ICIP)},
 doi = {10.1109/ICIP40778.2020.9190851},
 url = {http://ecommons.luc.edu/cs_facpubs/250},
 pdf = {http://ecommons.luc.edu/cs_facpubs/250},
 html = {http://ecommons.luc.edu/cs_facpubs/250},
 issn = {2381-8549},
 keywords = {Cameras;Computer vision;Surveillance;Shape;Object tracking;NP-hard problem;Security;Computational Geometry;Computer Vision;Camera Placement},
 month = {10},
 number = {},
 pages = {3254-3258},
 title = {Camera Placement Meeting Restrictions of Computer Vision},
 volume = {},
 year = {2020}
}

@inproceedings{9103479,
 abbr = {IEEE Conference},
 abstract = {We present FLIC, a distributed software data caching framework for fogs that reduces network traffic and latency. FLIC is targeted toward city-scale deployments of cooperative IoT devices in which each node gathers and shares data with surrounding devices. As machine learning and other data processing techniques that require large volumes of training data are ported to low-cost and low-power IoT systems, we expect that data analysis will be moved away from the cloud. Separation from the cloud will reduce reliance on power-hungry centralized cloud-based infrastructure. However, city-scale deployments of cooperative IoT devices often connect to the Internet with cellular service, in which service charges are proportional to network usage. IoT system architects must be clever in order to keep costs down in these scenarios. To reduce the network bandwidth required to operate city-scale deployments of cooperative IoT systems, FLIC implements a distributed cache on the IoT nodes in the fog. FLIC allows the IoT network to share its data without repetitively interacting with a simple cloud storage service, reducing calls out to a backing store. Our results displayed a less than 2\% miss rate on reads. Thus, allowing for only 5\% of requests needing the backing store. We were also able to achieve more than 50\% reduction in bytes transmitted per second.},
 author = {West, Jack and Klingensmith, Neil and Thiruvathukal, George K.},
 booktitle = {2020 IEEE International Conference on Fog Computing (ICFC)},
 doi = {10.1109/ICFC49376.2020.00019},
 url = {http://ecommons.luc.edu/cs_facpubs/243},
 html = {http://ecommons.luc.edu/cs_facpubs/243},
 issn = {},
 keywords = {cache storage;cellular radio;cloud computing;cooperative communication;data analysis;Internet of Things;learning (artificial intelligence);telecommunication power management;telecommunication traffic;data analysis;power-hungry centralized cloud-based infrastructure;low-power IoT systems;FLIC;IoT network;cloud storage service;distributed fog cache;city-scale applications;distributed software data caching framework;network traffic;cooperative IoT devices;machine learning;Coherence;Distributed databases;Cloud computing;Software;Bandwidth;Computer architecture;Containers},
 month = {4},
 number = {},
 pages = {73-78},
 selected = {true},
 title = {FLIC: A Distributed Fog Cache for City-Scale Applications},
 volume = {},
 year = {2020}
}

@inproceedings{10.1145/3370748.3406569,
 abbr = {IEEE Conference},
 abstract = {Deep Neural Networks (DNNs) achieve state-of-the-art accuracy in many computer vision tasks, such as object counting. Object counting takes two inputs: an image and an object query and reports the number of occurrences of the queried object. To achieve high accuracy, DNNs require billions of operations, making them difficult to deploy on resource-constrained, low-power devices. Prior work shows that a significant number of DNN operations are redundant and can be eliminated without affecting the accuracy. To reduce these redundancies, we propose a hierarchical DNN architecture for object counting. This architecture uses a Region Proposal Network (RPN) to propose regions-of-interest (RoIs) that may contain the queried objects. A hierarchical classifier then efficiently finds the RoIs that actually contain the queried objects. The hierarchy contains groups of visually similar object categories. Small DNNs at each node of the hierarchy classify between these groups. The RoIs are incrementally processed by the hierarchical classifier. If the object in an RoI is in the same group as the queried object, then the next DNN in the hierarchy processes the RoI further; otherwise, the RoI is discarded. By using a few small DNNs to process each image, this method reduces the memory requirement, inference time, energy consumption, and number of operations with negligible accuracy loss when compared with the existing techniques.},
 address = {New York, NY, USA},
 author = {Goel, Abhinav and Tung, Caleb and Aghajanzadeh, Sara and Ghodgaonkar, Isha and Ghosh, Shreya and Thiruvathukal, George K. and Lu, Yung-Hsiang},
 booktitle = {Proceedings of the ACM/IEEE International Symposium on Low Power Electronics and Design},
 doi = {10.1145/3370748.3406569},
 url = {http://ecommons.luc.edu/cs_facpubs/252},
 html = {http://ecommons.luc.edu/cs_facpubs/252},
 isbn = {9781450370530},
 keywords = {object counting, neural networks, low-power},
 location = {Boston, Massachusetts},
 numpages = {6},
 pages = {163168},
 pdf = {http://ecommons.luc.edu/cs_facpubs/252},
 publisher = {Association for Computing Machinery},
 series = {ISLPED '20},
 title = {Low-Power Object Counting with Hierarchical Neural Networks},
 url = {https://doi.org/10.1145/3370748.3406569},
 year = {2020}
}

@inproceedings{10.1145/3366423.3380063,
 abbr = {IEEE Conference},
 abstract = {Despite many exciting innovations in computer vision, recent studies reveal a number of risks in existing computer vision systems, suggesting results of such systems may be unfair and untrustworthy. Many of these risks can be partly attributed to the use of a training image dataset that exhibits sampling biases and thus does not accurately reflect the real visual world. Being able to detect potential sampling biases in the visual dataset prior to model development is thus essential for mitigating the fairness and trustworthy concerns in computer vision. In this paper, we propose a three-step crowdsourcing workflow to get humans into the loop for facilitating bias discovery in image datasets. Through two sets of evaluation studies, we find that the proposed workflow can effectively organize the crowd to detect sampling biases in both datasets that are artificially created with designed biases and real-world image datasets that are widely used in computer vision research and system development.},
 address = {New York, NY, USA},
 author = {Hu, Xiao and Wang, Haobo and Vegesana, Anirudh and Dube, Somesh and Yu, Kaiwen and Kao, Gore and Chen, Shuo-Han and Lu, Yung-Hsiang and Thiruvathukal, George K. and Yin, Ming},
 booktitle = {Proceedings of The Web Conference 2020},
 doi = {10.1145/3366423.3380063},
 url = {http://ecommons.luc.edu/cs_facpubs/244},
 html = {http://ecommons.luc.edu/cs_facpubs/244},
 isbn = {9781450370233},
 keywords = {workflow design, image dataset, sampling bias, crowdsourcing},
 location = {Taipei, Taiwan},
 numpages = {7},
 pages = {2955–2961},
 publisher = {Association for Computing Machinery},
 selected = {true},
 series = {WWW '20},
 title = {Crowdsourcing Detection of Sampling Biases in Image Datasets},
 url = {https://doi.org/10.1145/3366423.3380063},
 year = {2020}
}

@inproceedings{key,
 abbr = {Conference},
 author = {Greenberg, Ronald I. and Thiruvathukal, George K. and Greenberg, Sara T.},
 booktitle = {10th International Conference on Robotics in Education (RiE)},
 editor = {Springer Verlag},
 url = {http://ecommons.luc.edu/cs_facpubs/213},
 url = {http://ecommons.luc.edu/cs_facpubs/213},
 html = {http://ecommons.luc.edu/cs_facpubs/213},
 pdf = {http://ecommons.luc.edu/cs_facpubs/213},
 title = {Integrating Mathematics and Educational Robotics: Simple Motion Planning},
 abstract = {This paper shows how students can be guided to integrate elementary mathematical analyses with motion planning for typical educational robots. Rather than using calculus as in comprehensive works on motion planning, we show students can achieve interesting results using just simple linear regression tools and trigonometric analyses. Experiments with one robotics platform show that use of these tools can lead to passable navigation through dead reckoning even if students have limited experience with use of sensors, programming, and mathematics.},
 year = {2019}
}

@inproceedings{EistyCarverThiruvathukalEASE,
 abbr = {Conference},
 abstract = {Background: Developers face challenges in building high-quality research software due to its inherent complexity. These challenges can reduce the confidence users have in the quality of the result produced by the software. Use of a defined software development process, which divides the development into distinct phases, results in improved design, more trustworthy results, and better project management. Aims: This paper focuses on gaining a better understanding of the use of software development process for research software. Method: We surveyed research software developers to collect information about their use of software development processes. We analyze whether and demographic factors influence the respondents' use of and perceived value in defined process. Results: Based on 98 responses, research software developers appear to follow a defined software development process at least some of the time. The respondents also have a strong positive perception about the value of following processes. Conclusions: To produce high-quality and reliable research software, which is critical for many research domains, research software developers must follow a proper software development process. The results indicate a positive perception of value about using defined development processes that should lead to both short-term benefits through improved results and long-term benefits through more maintainable software.},
 author = {Eisty, Nasir U. and Thiruvathukal, George K. and Carver, Jeffrey C.},
 booktitle = {Proceedings of the Evaluation and Assessment on Software Engineering (EASE) 2019},
 doi = {10.1145/3319008.3319351},
 url = {http://ecommons.luc.edu/cs_facpubs/214},
 html = {http://ecommons.luc.edu/cs_facpubs/214},
 pdf = {http://ecommons.luc.edu/cs_facpubs/214},
 title = {Use of Software Process in Research Software Development: A Survey},
 year = {2019}
}

@inproceedings{9028394,
 abbr = {IEEE Conference},
 abstract = {This Innovative Practice Work in Progress presents progress in developing exercises for high school students incorporating level-appropriate mathematics into robotics activities. We assume mathematical foundations ranging from algebra to precalculus, whereas most prior work on integrating mathematics into robotics uses only very elementary mathematical reasoning or, at the other extreme, is comprised of technical papers or books using calculus and other advanced mathematics. The exercises suggested are relevant to any differential-drive robot, which is an appropriate model for many different varieties of educational robots. They guide students towards comparing a variety of natural navigational strategies making use of typical movement primitives. The exercises align with Common Core State Standards for Mathematics.},
 author = {Greenberg, Ronald I. and Thiruvathukal, George K.},
 booktitle = {2019 IEEE Frontiers in Education Conference (FIE)},
 doi = {10.1109/FIE43999.2019.9028394},
 url = {http://ecommons.luc.edu/cs_facpubs/231},
 html = {http://ecommons.luc.edu/cs_facpubs/231},
 issn = {2377-634X},
 keywords = {computer aided instruction;educational institutions;educational robots;mathematics computing;mobile robots;path planning;differential-drive robot;educational robots;high school mathematics;level-appropriate mathematics;robot motion planning;Wheels;Mobile robots;Navigation;Robot kinematics;Mathematics;Sensors;Robotics;Computer science education;Mathematics of Computing},
 month = {10},
 number = {},
 pdf = {http://ecommons.luc.edu/cs_facpubs/231},
 selected = {true},
 title = {Exercises Integrating High School Mathematics with Robot Motion Planning},
 volume = {},
 year = {2019}
}

@inproceedings{8695375,
 abbr = {IEEE Conference},
 abstract = {Computer vision relies on labeled datasets for training and evaluation in detecting and recognizing objects. The popular computer vision program, YOLO ("You Only Look Once"), has been shown to accurately detect objects in many major image datasets. However, the images found in those datasets, are independent of one another and cannot be used to test YOLO's consistency at detecting the same object as its environment (e.g. ambient lighting) changes. This paper describes a novel effort to evaluate YOLO's consistency for large-scale applications. It does so by working (a) at large scale and (b) by using consecutive images from a curated network of public video cameras deployed in a variety of real-world situations, including traf?c intersections, national parks, shopping malls, university campuses, etc. We speci?cally examine YOLO's ability to detect objects in different scenarios (e.g., daytime vs. night), leveraging the cameras' ability to rapidly retrieve many successive images for evaluating detection consistency. Using our camera network and advanced computing resources (supercomputers), we analyzedmorethan5millionimagescapturedby140network cameras in 24 hours. Compared with labels marked by humans (considered as "ground truth"), YOLO struggles to consistently detect the same humans and cars as their positions change from one frame to the next; it also struggles to detect objects at night time. Our ?ndings suggest that state-of-the art vision solutions should be trained by data from network camera with contextual information before they can be deployed in applications that demand high consistency on object detection.},
 author = {Tung, Caleb and Kelleher, Matthew R. and Schlueter, Ryan J.  and Xu, Binhan and Lu, Yung-Hsiang and Thiruvathukal, George K. and Chen, Yen-Kuan. and Lu, Yang},
 booktitle = {2019 IEEE Conference on Multimedia Information Processing and Retrieval (MIPR)},
 doi = {10.1109/MIPR.2019.00080},
 url = {http://ecommons.luc.edu/cs_facpubs/207},
 html = {http://ecommons.luc.edu/cs_facpubs/207},
 issn = {},
 keywords = {cameras;computer vision;lighting;object detection;video cameras;curated network;public video cameras;YOLO's ability;successive images;detection consistency;camera network;advanced computing resources;labels;state-of-the art vision solutions;network camera;variable ambient lighting conditions;labeled datasets;training;image datasets;large-scale applications;consecutive images;high consistency;large-scale object detection;objects recognition;computer vision program;YOLO consistency;You Only Look Once;time 24.0 hour;Cameras;Object detection;Lighting;Streaming media;Automobiles;Computer vision;Detectors;Computer Vision;Object Recognition;Network Cameras;Object Detection},
 month = {3},
 number = {},
 pages = {393-398},
 pdf = {http://ecommons.luc.edu/cs_facpubs/207},
 title = {Large-Scale Object Detection of Images from Network Cameras in Variable Ambient Lighting Conditions},
 volume = {},
 year = {2019}
}
@inproceedings{10.1145/3337932.3338814,
 abbr = {ACM},
 abstract = {In testing stateful abstractions, it is often necessary to record interactions, such as method invocations, and express assertions over these interactions. Following the Test Spy design pattern, we can reify such interactions programmatically through additional mutable state. Alternatively, a mocking framework, such as Mockito, can automatically generate test spies that allow us to record the interactions and express our expectations in a declarative domain-specific language. According to our study of the test code for Scala's Iterator trait, the latter approach can lead to a significant reduction of test code complexity in terms of metrics such as code size (in some cases over 70\% smaller), cyclomatic complexity, and amount of additional mutable state required. In this tools paper, we argue that the resulting test code is not only more maintainable, readable, and intentional, but also a better stylistic match for the Scala community than manually implemented, explicitly stateful test spies.},
 address = {New York, NY, USA},
 author = {Läufer, Konstantin and O'Sullivan, John and Thiruvathukal, George K.},
 booktitle = {Proceedings of the Tenth ACM SIGPLAN Symposium on Scala},
 doi = {10.1145/3337932.3338814},
 url = {http://ecommons.luc.edu/cs_facpubs/230},
 html = {http://ecommons.luc.edu/cs_facpubs/230},
 isbn = {9781450368247},
 keywords = {automated unit testing, test code metrics, stream processing, spy-based testing, mock-based testing, prefix sum, iterator design pattern, test code complexity},
 location = {London, United Kingdom},
 numpages = {5},
 pages = {17–21},
 publisher = {Association for Computing Machinery},
 series = {Scala '19},
 title = {Tests as Maintainable Assets via Auto-Generated Spies: A Case Study Involving the Scala Collections Library's Iterator Trait},
 url = {https://doi.org/10.1145/3337932.3338814},
 year = {2019}
}

@inproceedings{purdue_cam2_kaseb_resource_management,
 abbr = {IEEE},
 author = {Kaseb, Ahmed S. and Fu, Bo and Mohan, Anup and Lu, Yung-Hsiang and Reibman, Amy and Thiruvathukal, George K.},
 booktitle = {IEEE International Conference on Multimedia Information Processing and Retrieval},
 title = {Analyzing Real-Time Multimedia Content From Network Cameras Using CPUs and GPUs in the Cloud},
 abstract={Millions of network cameras are streaming real-time multimedia content (images or videos) for various environments (e.g., highways and malls) and can be used for a variety of applications. Analyzing the content from many network cameras requires significant amounts of computing resources. Cloud vendors offer resources in the form of cloud instances with different capabilities and hourly costs. Some instances include GPUs that can accelerate analysis programs. Doing so incurs additional monetary cost because instances with GPUs are more expensive. It is a challenging problem to reduce the overall monetary cost of using the cloud to analyze the real-time multimedia content from network cameras while meeting the desired analysis frame rates. This paper describes a cloud resource manager that solves this problem by estimating the resource requirements of executing analysis programs using CPU or GPU, formulating the resource allocation problem as a multiple-choice vector bin packing problem, and solving it using an existing algorithm. The experiments show that the manager can reduce up to 61\% of the cost compared with other allocation strategies.},
 year = {2018},
 url = {https://ecommons.luc.edu/cs_facpubs/190/},
 html = {https://ecommons.luc.edu/cs_facpubs/190/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/190/},
}

@inproceedings{purdue_cam2_hst2018,
 abbr = {IEEE},
 author = {Surakitbanharn, Chittayong and Yau, Calvin and Wang, Guizhen and Chawla, Aniesh and Pan, Yinuo and Sun, Zhaoya and Yellin, Sam and Ebert, David and Lu, Yung-Hsiang and Thiruvathukal, George K.},
 booktitle = {IEEE Symposium on Technologies for Homeland Security},
 doi = {10.1109/THS.2016.7568911},
 issn = {},
 keywords = {cameras;safety;surveillance;heterogeneous sources;public network cameras;public safety;surveillance systems;visualization tool;Cameras;Law enforcement;Media;Real-time systems;Safety;Surveillance;Visualization},
 month = {10},
 number = {},
 title = {Cross-Referencing Social Media and Public Surveillance Camera Data for Disaster Response},
 volume = {},
 year = {2018},
 url = {https://ecommons.luc.edu/cs_facpubs/203/},
 html = {https://ecommons.luc.edu/cs_facpubs/203/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/203/},
 abstract = {Physical media (like surveillance cameras) and social media (like Instagram and Twitter) may both be useful in attaining on-the-ground information during an emergency or disaster situation. However, the intersection and reliability of both surveillance cameras and social media during a natural disaster are not fully understood. To address this gap, we tested whether social media is of utility when physical surveillance cameras went off-line during Hurricane Irma in 2017. Specifically, we collected and compared geo-tagged Instagram and Twitter posts in the state of Florida during times and in areas where public surveillance cameras went off-line. We report social media content and frequency and content to determine the utility for emergency managers or first responders during a natural disaster.}
}

@inproceedings{8588655,
 author = {Eisty, Nasir U. and Thiruvathukal, George K. and Carver, Jeffrey C.},
 abbr = {IEEE Conference},
 abstract = {Background: Breakthroughs in research increasingly depend on complex software libraries, tools, and applications aimed at supporting specific science, engineering, business, or humanities disciplines. The complexity and criticality of this software motivate the need for ensuring quality and reliability. Software metrics are a key tool for assessing, measuring, and understanding software quality and reliability. Aims: The goal of this work is to better understand how research software developers use traditional software engineering concepts, like metrics, to support and evaluate both the software and the software development process. One key aspect of this goal is to identify how the set of metrics relevant to research software corresponds to the metrics commonly used in traditional software engineering. Method: We surveyed research software developers to gather information about their knowledge and use of code metrics and software process metrics. We also analyzed the influence of demographics (project size, development role, and development stage) on these metrics. Results: The survey results, from 129 respondents, indicate that respondents have a general knowledge of metrics. However, their knowledge of specific SE metrics is lacking, their use even more limited. The most used metrics relate to performance and testing. Even though code complexity often poses a significant challenge to research software development, respondents did not indicate much use of code metrics. Conclusions: Research software developers appear to be interested and see some value in software metrics but may be encountering roadblocks when trying to use them. Further study is needed to determine the extent to which these metrics could provide value in continuous process improvement.},
 booktitle = {2018 IEEE 14th International Conference on e-Science (e-Science)},
 doi = {10.1109/eScience.2018.00036},
 issn = {},
 keywords = {software development management;software libraries;software metrics;software quality;software reliability;research software developers;code metrics;software process metrics;research software development;software metrics;complex software libraries;reliability;software development process;software quality;software engineering concepts;SE metrics;Software;Complexity theory;Software metrics;Tools;Software engineering;Survey, Software Metrics, Software Engineering, Research Software},
 month = {10},
 number = {},
 pages = {212-222},
 selected = {true},
 title = {A Survey of Software Metric Use in Research Software Development},
 volume = {},
 year = {2018},
 html = {https://ecommons.luc.edu/cs_facpubs/206/},
 url = {https://ecommons.luc.edu/cs_facpubs/206/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/206/},
 
}

@inproceedings{8396976,
 abbr = {IEEE Conference},
 author = {Kaseb, Ahmed S. and Fu, Bo and Mohan, Anup  and Lu, Yung-Hsiang and Reibman, Amy and Thiruvathukal, George K.},
 abstract = {Millions of network cameras are streaming real-time multimedia content (images or videos) for various environments (e.g., highways and malls) and can be used for a variety of applications. Analyzing the content from many network cameras requires significant amounts of computing resources. Cloud vendors offer resources in the form of cloud instances with different capabilities and hourly costs. Some instances include GPUs that can accelerate analysis programs. Doing so incurs additional monetary cost because instances with GPUs are more expensive. It is a challenging problem to reduce the overall monetary cost of using the cloud to analyze the real-time multimedia content from network cameras while meeting the desired analysis frame rates. This paper describes a cloud resource manager that solves this problem by estimating the resource requirements of executing analysis programs using CPU or GPU, formulating the resource allocation problem as a multiple-choice vector bin packing problem, and solving it using an existing algorithm. The experiments show that the manager can reduce up to 61\% of the cost compared with other allocation strategies.},
 booktitle = {2018 IEEE Conference on Multimedia Information Processing and Retrieval (MIPR)},
 doi = {10.1109/MIPR.2018.00020},
 issn = {},
 keywords = {bin packing;cloud computing;data analysis;graphics processing units;microprocessor chips;multimedia computing;resource allocation;resource allocation problem;network cameras;computing resources;cloud vendors;cloud resource manager;multimedia content;GPU;CPU;vector bin packing problem;Graphics processing units;Cameras;Resource management;Cloud computing;Real-time systems;Multimedia communication;Streaming media;Resource Allocation;Cloud Computing;Computer Vision;GPGPU;Network Cameras},
 month = {4},
 number = {},
 pages = {69-74},
 title = {Analyzing Real-Time Multimedia Content from Network Cameras Using CPUs and GPUs in the Cloud},
 volume = {},
 year = {2018},
 url = {https://ecommons.luc.edu/cs_facpubs/190/},
 html = {https://ecommons.luc.edu/cs_facpubs/190/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/190/},
}

@inproceedings{2018LPIRC,
 abbr = {IEEE},
 author = {Sergei Alyamkin and Matthew Ardi and Achille Brighton and Alexander C. Berg and Yiran Chen and Hsin-Pai Cheng and Bo Chen and Zichen Fan and Chen Feng and Bo Fu and Kent Gauen and Jongkook Go and Alexander Goncharenko and Xuyang Guo and Hong Hanh Nguyen and Andrew Howard and Yuanjun Huang and Donghyun Kang and Jaeyoun Kim and Alexander Kondratyev and Seungjae Lee and Suwoong Lee and Junhyeok Lee and Zhiyu Liang and Xin Liu and Juzheng Liu and Zichao Li and Yang Lu and Yung-Hsiang Lu and Deeptanshu Malik and Eunbyung Park and Denis Repin and Tao Sheng and Liang Shen and Fei Sun and David Svitov and George K. Thiruvathukal and Baiwu Zhang and Jingchi Zhang and Xiaopeng Zhang and Shaojie Zhuo},
 booktitle = {arXiv:1810.01732},
 title = {2018 Low-Power Image Recognition Challenge: Status, Challenegs, Opportunities},
 year = {2018},
 url={https://ecommons.luc.edu/cs_facpubs/217/},
 html={https://ecommons.luc.edu/cs_facpubs/217/},
 pdf={https://ecommons.luc.edu/cs_facpubs/217/},
 abstract={Computer vision has achieved impressive progress in recent years. Meanwhile, mobile phones have become the primary computing platforms for millions of people. In addition to mobile phones, many autonomous systems rely on visual data for making decisions and some of these systems have limited energy (such as unmanned aerial vehicles also called drones and mobile robots). These systems rely on batteries and energy efficiency is critical. This article serves two main purposes: (1) Examine the state-of-the-art for low-power solutions to detect objects in images. Since 2015, the IEEE Annual International Low-Power Image Recognition Challenge (LPIRC) has been held to identify the most energy-efficient computer vision solutions. This article summarizes 2018 winners' solutions. (2) Suggest directions for research as well as opportunities for low-power computer vision.},
}

@inproceedings{mike_lewis_distributed_2017,
 abbr = {ACM},
 abstract = {Efficient RDF, graph based queries are becoming more pertinent based on the increased interest in data analytics and its intersection with large, unstructured but connected data. Many commercial systems have adopted distributed RDF graph systems in order to handle increasing dataset sizes and complex queries. This paper introduces a distribute graph approach to pre-processing linked data. Instead of traversing the memory graph, our system indexes pre-processed join elements that are organized in a graph structure. We analyze the Dbpedia data-set (derived from the Wikipedia corpus) and compare our access method to the graph traversal access approach which we also devise. Results show from our experiments that the distributed, pre-processed graph approach to accessing linked data is faster than the traversal approach over a specific range of linked queries.},
 address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
 author = {Lewis, Mike and Thiruvathukal, George K. and Vishwanath, Venkatram and Papka, Michael and Johnson, Andrew},
 booktitle = {{Workshop on Semantic Big Data (SBD 2018) at ACM SIGMOD}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-1-4503-4987-1},
 title = {{A Distributed Graph Approach for Pre-processing Linked RDF Data Using Supercomputers}},
 year = {2017},
 url={https://ecommons.luc.edu/cs_facpubs/139/},
 pdf={https://ecommons.luc.edu/cs_facpubs/139/},
}

@inproceedings{kent_gauen_comparison_2017,
 abbr = {IEEE},
 abstract = {One of the greatest technological improvements in recent years is the rapid progress using machine learning for processing visual data. Among all factors that contribute to this development, datasets with labels play crucial roles. Several datasets are widely reused for investigating and analyzing different solutions in machine learning. Many systems, such as autonomous vehicles, rely on components using machine learning for recognizing objects. This paper compares different visual datasets and frameworks for machine learning. The comparison is both qualitative and quantitative and investigates object detection labels with respect to size, location, and contextual information. This paper also presents a new approach creating datasets using real-time, geo-tagged visual data, greatly improving the contextual information of the data. The data could be automatically labeled by cross-referencing information from other sources (such as weather).},
 author = {Gauen, Kent and Dailey, Ryan and Laiman, John and Zi, Yuxiang and Asokan, Nirmal and Lu, Yung-Hsiang and Thiruvathukal, George K. and Shyu, Mei-Ling and Chen, Shu-Ching},
 booktitle = {{IEEE Conference on Information Reuse and Integration 2017}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {346--355},
 title = {{Comparison of Visual Datasets for Machine Learning}},
 year = {2017},
 url={https://ecommons.luc.edu/cs_facpubs/148/},
 pdf={https://ecommons.luc.edu/cs_facpubs/148/},
}

@inproceedings{david_b_dennis_computer_2017,
 abbr = {Presentation},
 author = {Dennis, David B. and Thiruvathukal, George K.},
 booktitle = {CESTEMER Conference: Cultivating Ensembles in STEM Education and Research},
 title = {Computer Science and Cultural History: A Dialogue},
 year = {2017},
 url = {https://ecommons.luc.edu/history_facpubs/42/},
 html = {https://ecommons.luc.edu/history_facpubs/42/},
 pdf = {https://ecommons.luc.edu/history_facpubs/42/},
}

@inproceedings{adrienne_decker_research_2016,
 abbr = {IEEE},
 address = {Piscataway, NJ},
 author = {Decker, Adrienne and Payton, Jamie and Eiselt, Kurt and Barnes, Tiffany and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 publisher = {IEEE},
 shorttitle = {2016 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT) RESPECT 2016},
 title = {Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT) RESPECT 2016},
 urldate = {2018-01-07},
 year = {2016}
}

@inproceedings{wl_honig_framework_2015,
 abbr = {IEEE},
 abstract = {Academic courses focused on individual microcomputers or client/server applications are no longer sufficient for students to develop knowledge in embedded systems. Current and near-term industrial systems employ multiple interacting components and new network and security approaches; hence, academic preparation requires teaching students to develop realistic projects comparable to these real-world products. However, the complexity, breadth, and technical variations of these real-world products are difficult to reproduce in the classroom. This paper outlines preliminary work on a framework architecture suitable for academic teaching of modern embedded systems including the Internet of Things. It defines four layers, two of which are at the edges of the network, and not adequately covered in academia. For each layer of the architecture, specific technology and suitable devices are identified. Desired academic outcomes for courses using projects based on the architecture are identified. Feedback and comparison is sought on how effective student course and research activities based on the framework will be to real-world embedded systems developers.},
 author = {Honig, William and Läufer, Konstantin and Thiruvathukal, George K.},
 booktitle = {10th IEEE International Symposium on Industrial Embedded Systems (SIES)},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {1--4},
 title = {A Framework Architecture for Student Learning in Distributed Embedded Systems},
 year = {2015},
 url = {https://ecommons.luc.edu/cs_facpubs/257/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/257/},
}

@inproceedings{tiffany_barnes_proceedings_2015,
 abbr = {Conference},
 author = {Barnes, Tiffany and Thiruvathukal, George K. and Boyer, Kristy Elizabeth and Forbes, Jeff and Payton, Jamie},
 booktitle = {Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT) RESPECT 2015},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 title = {Proceedings of 2015 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT) RESPECT 2015},
 urldate = {2018-01-07},
 year = {2015}
}

@inproceedings{dh2014_borg_thiruvathukal,
 abbr = {Conference},
 author = {Borg, Trevor and Thiruvathukal, George K.},
 booktitle = {Proceedings of Digital Humanities 2014 (DH2014)},
 title = {{Single Page Apps for Humanists: A Case Study Using the Perseus Richmond Times Corpus}},
 url = {http://dharchive.org/paper/DH2014/Paper-888.xml},
 year = {2014},
 abstract={TEI is good at what it does: static documents rendered in glorious detail. But TEI is old. Its age doesn’t make TEI irrelevant, but it’s important to be conscious of how the way we weave the fabric of the web has changed since TEI was conceived in 1994, and reevaluate some of our assumptions about its use. In this early work, we are exploring this rethinking as part of a larger study within the center on general methods for isolating the complexity frequently associated with XML-based frameworks.} 
}

@inproceedings{jeffrey_carver_software_2013,
 abbr = {Workshop},
 author = {Carver, Jeffrey C. and Thiruvathukal, George K.},
 booktitle = {WSSSPE 2013},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 publisher = {Figshare},
 title = {Software Engineering Need not be Difficult},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/75},
 html = {https://ecommons.luc.edu/cs_facpubs/75},
 pdf = {https://ecommons.luc.edu/cs_facpubs/75},
 abstract={"Progress in scientific research is dependent on the quality and accessibility of software at all levels" (the overall premise of the workshop). We argue that true progress depends on embracing the best traditional--and emergent-- practices in software engineering, especially agile practices that intersect with the tradition of software engineering. Software engineering as practiced today is more than the stereotypical monolithic lifecycle processes (e.g. waterfall, spiral, etc.) that historically have impeded progress for small/medium sized development efforts. In addition, the discipline and practice of software engineering includes software quality (with an established tradition of software metrics). Software processes can be pragmatic and use best features/practices of various models without impeding developer productivity. The embracement of these practices may also be important to prevent a brain drain of sorts, as students are increasingly eschewing traditional scientific/computation science research in favor of industry opportunities, where they can literally apply what they have learned in software development courses where pragmatic software engineering practices (e.g. test-driven design, RESTful architecture, etc.) are already prevalent."
},
}

@inproceedings{kaylor_simplifying_2012,
 abbr = {IEEE},
 author = {Kaylor, Joe P. and Läufer and Thiruvathukal, George K.},
 booktitle = {International {{Conference}} on {{Electro Information Technology}} 2012},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 title = {Simplifying Domain Modeling and Memory Management in User-Mode Filesystems with the {{NOFS}} Framework},
 year = {2012},
 url = {https://ecommons.luc.edu/cs_facpubs/62/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/62/},

}

@inproceedings{kaylor_restfs_2011,
 abbr = {ACM},
 abstract = {We have designed and implemented RestFS, a software framework that provides a uniform, configurable connector layer for mapping remote web-based resources to local filesystem-based resources, recognizing the similarity between these two types of resources. Such mappings enable programmatic access to a resource, as well as composition of two or more resources, through the local operating system's standard filesystem application programming interface (API), scriptable file-based command-line utilities, and inter-process communication (IPC) mechanisms. The framework supports automatic and manual authentication. We include several examples intended to show the utility and practicality of our framework.},
 address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
 author = {Kaylor, Joe P. and Läufer, Konstantin and Thiruvathukal, George K.},
 booktitle = {{Second International Workshop / RESTful Design (WS-REST '11)}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-1-4503-0623-2},
 title = {{RestFS: Resources are Filesystems, too}},
 year = {2011},
 url = {https://ecommons.luc.edu/cs_facpubs/15/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/15/},
}

@inproceedings{dh2011_jones_thiruvathukal,
 abbr = {Conference},
 author = {Jones, Steven E. and Thiruvathukal, George K.},
 booktitle = {Digital Humanities 2011 (DH2011)},
 pages = {163--164},
 title = {The Object of Platform Studies: Relational Materialities and the Social Platform (the Case of the Nintendo Wii)},
 year = {2011},
 url = {https://ecommons.luc.edu/cs_facpubs/28/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/28/},
 html = {https://ecommons.luc.edu/cs_facpubs/28/},
 abstract = {Racing the Beam: The Atari Video Computer System,by Ian Bogost and Nick Montfort, inaugurated thePlatform Studies series at MIT Press in 2009.We’ve coauthored a new book in the series, Codename: Revolution: the Nintendo Wii Video Game Console. Platform studies is a quintessentially Digital Humanities approach, since it’s explicitly focused on the interrelationship of computing and cultural expression. According to the series preface, the goal of platform studies is “to consider the lowest level of computing systems and to understand how these systems relate to culture and creativity.”In practice, this involves paying close attentionto specific hardware and software interactions--to the vertical relationships between a platform’s multilayered materialities (Hayles; Kirschenbaum),from transistors to code to cultural reception. Any given act of platform-studies analysis may focus for example on the relationship between the chipset and the OS, or between the graphics processor and display parameters or game developers’ designs.In computing terms, platform is an abstraction(Bogost and Montfort), a pragmatic frame placed around whatever hardware-and-software configuration is required in order to build or run certain specificapplications (including creative works). The object of platform studies is thus a shifting series of possibility spaces, any number of dynamic thresholds between discrete levels of a system.},
}

@inproceedings{kaylor_online_2010,
 abbr = {IEEE},
 abstract = {We present a novel form of intra-volume directory layering with hierarchical, inheritance-like namespace unification. While each layer of an OLFS volume constitutes a subvolume that can be mounted separately in a fan-in configuration, the entire hierarchy is always accessible (online) and fully navigable through any mounted layer. OLFS uses a relational database to store its layering metadata and either a relational database or any (virtual) host file system as its backing store, along with metadata and block caching for improved performance. Because OLFS runs as a virtual file system in user-space, its capabilities are available to all existing software without modification or special privileges. We have developed a reference implementation of OLFS for FUSE based on MySQL and XFS, and conducted performance benchmarking against XFS by itself. We explore several applications of OLFS, such as enhanced server synchronization, transactional file operations, and versioning.},
 author = {Kaylor, Joe P. and Läufer, Konstantin and Thiruvathukal, George K.},
 booktitle = {IEEE International Conference on Electro/Information Technology (EIT 2010)},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {1--9},
 shorttitle = {Online Layered File System (OLFS)},
 title = {Online Layered File System (OLFS): A layered and versioned filesystem and performance analysis},
 year = {2010},
 url = {https://ecommons.luc.edu/cs_facpubs/40},
 html = {https://ecommons.luc.edu/cs_facpubs/40},
 pdf = {https://ecommons.luc.edu/cs_facpubs/40},
}

@inproceedings{george_k_thiruvathukal_e-carrel_2010,
 abbr = {Workshop},
 abstract = {The E-Carrel project aims to address the preservation of, access to, and re-uses of humanities electronic text files. It enables dynamic, growing resource projects as repositories for new knowledge. It provides for on-line distributed data and tools that are open to new scholarly enhancement through a user friendly tagging tool, sophisticated use of stand-off markup and annotation (leveraging RDF capabilities), and a browsing system anyone can use. It creates a secure system of text preparation and dissemination that encourages collaboration and participation by anyone interested in the texts. To insure the endurance of authenticated texts, multiple copies are distributed on the Internet. Foundation texts anchor a system for maintaining and growing project usefulness beyond the originators\&rsquo; interest and the functions they imagined. Increasing access to humanities texts as useful, adaptable, reliable source materials that can be re-purposed will increase interest in continued maintenance, which are critical for long-term preservation and access.},
 author = {Thiruvathukal, George K. and Jones, Steven E. and Shillingsburg, Peter},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 publisher = {{The University of Chicago}},
 shorttitle = {E-Carrel},
 title = {E-Carrel: An Environment for Collaborative Textual Scholarship},
 urldate = {2018-01-07},
 year = {2010},
 url = {https://ecommons.luc.edu/cs_facpubs/1},
 html = {https://ecommons.luc.edu/cs_facpubs/1},
 pdf = {https://ecommons.luc.edu/cs_facpubs/1},
}

@inproceedings{matt_bone_taming_2008,
 abbr = {IEEE},
 abstract = {Processing markup in object-oriented languages often requires the programmer to focus on the objects generating the markup rather than the more pertinent domain objects. The BetterXML framework aims to improve this situation by allowing the programmer to develop a domain-specific object model as usual and later bind this model to preexisting or newly generated markup. To this end, the framework provides two types of object trees, XElement and NaturalXML, for representing XML documents. XElement goes beyond DOM-like automatic parsing of XML by supporting the custom mapping of elements to domain objects; NaturalXML allows the mapping of existing domain objects to XML elements using class metadata. Both types of object trees can be inflated and deflated by means of a common intermediate representation in the form of an event stream. Finally, the framework includes the XML Intermediate Representation (XIR), a lossless record-oriented representation of XML documents for efficient streaming and other types of data exchange.},
 author = {Bone, Matt and Nabicht, Peter F. and Läufer and Thiruvathukal, George K.},
 booktitle = {IEEE International Conference on Electro/Information Technology (EIT 2008)},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {488--493},
 shorttitle = {Taming XML},
 title = {Taming XML: Objects First, Then Markup},
 year = {2008},
 url={https://ecommons.luc.edu/cs_facpubs/39},
 pdf={https://ecommons.luc.edu/cs_facpubs/39},
}

@inproceedings{gonzalez_hydra_2006-1,
 abbr = {Conference},
 author = {Gonzalez, Benjamin and Thiruvathukal, George K.},
 booktitle = {Linux Clusters International},
 shorttitle = {The {{Hydra Filesystem}}},
 title = {The {{Hydra Filesystem}}: {{A Distrbuted Storage Famework}}},
 year = {2006},
 abstract = {Hydra File System (HFS) is an experimental framework for constructing parallel and distributed filesystems. While parallel and distributed applications requiring scalable and flexible access to storage and retrieval are becoming more commonplace, parallel and distributed filesystems remain difficult to deploy easily and configure for different needs. HFS aims to be different by being true to the tradition of high-performance computing while employing modern design patterns to allow various policies to be configured on a per instance basis (e.g. storage, communication, security, and indexing schemes). We describe a working prototype (available for public download) that has been implemented in the Python programming language.},
 url = {https://ecommons.luc.edu/cs_facpubs/7},
 pdf = {https://ecommons.luc.edu/cs_facpubs/7},
}

@inproceedings{george_k_thiruvathukal_electronic_2006,
 abbr = {Poster},
 author = {Thiruvathukal, George K. and Frantzen, Allen J.},
 booktitle = {Chicago Colloquium on Digital Humanities and Computer Science},
 title = {Electronic Editing of Anglo-Saxon Texts},
 month = {11},
 year = {2006},
 abstract = {Poster presentation/demonstration at the first Chicago Colloquium on Digital Humanities about editing of Old English texts and the Anglo-Saxon project.},
 url = {https://ecommons.luc.edu/cs_facpubs/56/},
 html = {https://ecommons.luc.edu/cs_facpubs/56/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/56/},
}

@inproceedings{aarestad_scalable_2006,
 abbr = {IEEE},
 abstract = {Scalable atomic and parallel access to noncontiguous regions of a file is essential to exploit high performance I/O as required by large-scale applications. Parallel I/O frameworks such as MPI I/O conceptually allow I/O to be defined on regions of a file using derived datatypes. Access to regions of a file can be automatically computed on a perprocessor basis using the datatype, resulting in a list of (offset, length) pairs. We describe three approaches for implementing lock serving (whole file, region locking, and byterange locking) and compare the various approaches using three noncontiguous I/O benchmarks. We present the details of the lock server architecture and describe the implementation of a fully-functional prototype that makes use of a lightweight message passing library and red/black trees.},
 author = {Aarestad, Peter M. and Ching, Avery and Thiruvathukal, George K. and Choudhary, Alok N.},
 booktitle = {Sixth {{IEEE International Symposium}} on {{Cluster Computing}} and the {{Grid}}, 2006. {{CCGRID}} 06},
 doi = {10.1109/CCGRID.2006.88},
 file = {/Users/gkt/Zotero/storage/ZBFGSHIN/1630793.html},
 keywords = {Application software,Computer science,Concurrent computing,Data visualization,File servers,Large-scale systems,Libraries,Message passing,Prototypes,Testing},
 month = {5},
 pages = {35--42},
 title = {Scalable {{Approaches}} for {{Supporting MPI}}-{{IO Atomicity}}},
 volume = {1},
 year = {2006},
 url = {https://ecommons.luc.edu/cs_facpubs/21/},
 html = {https://ecommons.luc.edu/cs_facpubs/21/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/21/},
}

@inproceedings{wei-keng_liao_scalable_2003,
 abbr = {Conference},
 author = {Liao, Wei-Keng and Choudhary, Alok N. and Coloma, Kenin and Thiruvathukal, George K. and Ward, Lee and Russell, Eric and Pundit, Neil},
 booktitle = {International {{Conference}} on {{Parallel Processing}}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {239--248},
 title = {Scalable {{Implementations}} of {{MPI Atomicity}} for {{Concurrent Overlapping I}}/{{O}}},
 abstract = {For concurrent I/O operations, atomicity defines the results in the overlapping file regions simultaneously read/written by requesting processes. Atomicity has been well studied at the file system level, such as POSIX standard. In this paper, we investigate the problems arising from the implementation of MPI atomicity for concurrent overlapping write access and provide a few programming solutions. Since the MPI definition of atomicity differs from the POSIX one, an implementation that simply relies on the POSIX file systems does not guarantee correct MPI semantics. To have a correct implementation of atomic I/O in MPI, we examine the efficiency of three approaches: 1) file locking, 2) graph-coloring, and 3) process-rank ordering. Performance complexity for these methods are analyzed and their experimental results are presented for file systems including NFS, SGI’s XFS, and IBM’s GPFS.},
 year = {2003},
 url = {https://ecommons.luc.edu/cs_facpubs/12/},
 html = {https://ecommons.luc.edu/cs_facpubs/12/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/12/},

}

@inproceedings{x_shen_novel_2000,
 abbr = {IEEE},
 abstract = {Our results demonstrate that our novel application development environment provides both ease-of-use and high performance for large-scale, I/O-intensive scientific applications.},
 address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
 author = {Shen, Xiaohui and Liao, Wei-Keng and Choudhary, Alok N. and Memik, Gokhan and Kandemir, Mahmut and More, Sachin and Thiruvathukal, George K. and Singh, Arti},
 booktitle = {Proceedings of the International Conference on Supercomputing},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-1-58113-270-0},
 title = {A Novel Application Development Environment for Large-scale Scientific Computations},
 year = {2000},
 url = {https://ecommons.luc.edu/cs_facpubs/48/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/48/},
}

@inproceedings{x_shen_java_2000,
 abbr = {IEEE},
 abstract = {Large-scale scientific applications present great challenges to computational scientists in terms of obtaining high performance and in managing large datasets. These applications (most of which are simulations) may employ multiple techniques and resources in a heterogeneously distributed environment. Effective working in such an environment is crucial for modern large-scale simulations. In this paper, we present an integrated Java graphical user interface (IJ-GUI) that provides a control platform for managing complex programs and their large datasets easily. As far as performance is concerned, we present and evaluate our initial implementation of two optimization schemes: data replication and data prediction. Data replication can take advantage of 'temporal locality' by caching the remote datasets on local disks; data prediction, on the other hand, provides prefetch hints based on the datasets' past activities that are kept in databases. We first introduce the data contiguity concept in such an environment that guides data prediction. The relationship between the two approaches is discussed.},
 author = {Shen, Xiaohui and Thiruvathukal, George K. and Liao, Wei-Keng and Choudhary, Alok N and Singh, Arti},
 booktitle = {Fourth International Conference on High-Performance Computing in the Asia-Pacific Region},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {478--484 vol.1},
 title = {A Java Graphical User Interface for Large-scale Scientific Computations in Distributed Systems},
 volume = {1},
 year = {2000},
 url = {https://ecommons.luc.edu/cs_facpubs/49/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/49/},
}

@inproceedings{william_t_oconnell_distributed_1994,
 abbr = {Conference},
 author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
 booktitle = {International {{Conference}} on {{Parallel Processing}}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {II},
 shorttitle = {Distributed {{Memo}}},
 title = {Distributed {{Memo}}: {{A Heterogeneously Parallel}} and {{Distributed Software Programming Environment}}},
 year = {1994},
 url = {https://ecommons.luc.edu/cs_facpubs/44/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/44/},
}

@inproceedings{william_t_oconnell_distributed_1994-1,
 abbr = {Conference},
 author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
 booktitle = {International Conference on Parallel Processing},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {II57--II64},
 shorttitle = {Distributed Memo},
 title = {Distributed Memo: A Heterogeneously Distributed and Parallel Software Development Environment},
 volume = {2},
 year = {1994},
 url = {https://ecommons.luc.edu/cs_facpubs/44/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/44/},
 abstract = {Heterogeneously distributed and parallel computing environments are highly dependent on hardware, data migration, and protocols. The result is significant difficulty in software reuse, portability across platforms, and an increased overall development effort. The appearance of a shared directory of unordered queues can be provided by integrating heterogeneous computers transparently. This integration provides a conducive environment for parallel and distributed application development, by abstracting the issues of hardware and communication. Object oriented technology is exploited to provide this seamless environment.},
}

@inproceedings{william_oconnell_generic_1994,
 abbr = {Conference},
 author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
 booktitle = {International Conference on Advanced Science and Technology (ICAST 1994 at AT\&T Bell Laboratories)},
 month = {1},
 title = {A Generic Software Modeling Framework for Building Heterogeneous Distributed and Parallel Software Systems},
 year = {1994},
 abstract = {Heterogeneous distributed and parallel computing environments are highly dependent on hardware and communication protocols. The result is significant difficulty in software reuse, portability across platforms, interoperability, and an increased overall development effort. A new systems engineering approach is needed for parallel processing systems in heterogeneous environments. The generic modeling framework de-emphasizes platform- specific development while exploiting software reuse (and platform-specific capabilities) with a simple, well defined, and easily integrated set of abstractions providing a high level of heterogeneous interoperability.},
 url = {https://ecommons.luc.edu/cs_facpubs/43/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/43/},
}

@inproceedings{george_k_thiruvathukal_toward_1994,
 abbr = {IEEE},
 author = {Thiruvathukal, George K.},
 booktitle = {International Conference on High-Performance Computing (IEEE HiPC) India},
 month = {12},
 title = {Toward Scalable Parallel Software: An Active Object Model and Library to Support von Neumann Languages},
 year = {1994},
 url = {https://ecommons.luc.edu/cs_facpubs/50},
 pdf = {https://ecommons.luc.edu/cs_facpubs/50},
 abstract = {Scalable parallel processing has been proposed as the technology scientists and engineers can use today to solve the problems of tomorrow. Many computational Grand Challenge problems require between two and three orders of magnitude than can be provided with the scalable parallel hardware of the early nineteen-nineties. While hardware continues to become more scalable and cheaper, software is not advancing at the same pace and remains a very expensive part of systems development.  A great deal of emphasis on software technology to support scalable parallel processing is placed on von Neumann languages. One of two approaches is common: (a) augment the von Neumann language with explicit parallel constructs or (b) write super-optimizing compilers to “find” the parallelism in a von Neumann program. These two approaches appear to be useful at some level; however, this paper argues that software constructed using these approaches is not likely to scale very well, because an appropriate level of abstraction is not being used to solve the problem.  We propose a simple layered architecture for doing parallel processing. The outer layer is the composition layer. This layer is used from a von Neumann language to encode algorithms using standard building blocks (objects). The middle layer uses objects. These objects exhibit high potential for parallelism. In our application, we focus on multidimensional arrays. At the lowest level, Itinerant Actors is used. Itinerant Actors is an object model developed by Christopher and Thiruvathukal at IIT to support asynchronous message-passing between active objects with a number of other useful ideas.},

}
@inproceedings{george_k_thiruvathukal_simulation_1991,
 abbr = {IEEE},
 abstract = {Message Driven Computation (MDC) is a model of computation with which they have been experimenting at the Illinois Institute of Technology. The authors aim to prove the viability of MDC in practice for the expression of parallel algorithms and the implementation of functional and dataflow programming languages. In the paper they discuss their implementation of the Lucid programming language in MDC. The discussion presents a subset of Lucid which illustrates the principles of Lucid, Message Driven Computing, and the translation into and the interpretation of dataflow graphs.$<$$>$},
 author = {Thiruvathukal, George K. and Christopher, Thomas W.},
 booktitle = {{International Parallel Processing Symposium}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 pages = {634--637},
 shorttitle = {{A simulation of demand-driven dataflow}},
 title = {A Simulation of Demand-driven Dataflow: Translation from Lucid into MDC language},
 year = {1991},
 url = {https://ecommons.luc.edu/cs_facpubs/51},
 html = {https://ecommons.luc.edu/cs_facpubs/51},
 pdf = {https://ecommons.luc.edu/cs_facpubs/51},
}

@article{Dailey2021,
 title = {{Automated Discovery of Network Cameras inHeterogeneous Web Pages}},
 abbr = {ACM TOIT},
 selected = {true},
 abstract = {Reduction in the cost of Network Cameras along with a rise in connectivity enables entities all around the world to deploy vast arrays of camera networks. Network cameras offer real-time visual data that can be used for studying traffic patterns, emergency response, security, and other applications. Although many sources of Network Camera data are available, collecting the data remains difficult due to variations in programming interface and website structures. Previous solutions rely on manually parsing the target website, taking many hours to complete. We create a general and automated solution for aggregating Network Camera data spread across thousands of uniquely structured webpages. We analyze heterogeneous webpage structures and identify common characteristics among 73 sample Network Camera websites (each website has multiple web pages). These characteristics are then used to build an automated camera discovery module that crawls and aggregates Network Camera data. Our system successfully extracts 57,364 Network Cameras from 237,257 unique web pages.},
 author = {Dailey, Ryan and Chawla, Aniesh and Liu, Andrew and Mishra, Sripath and Zhang, Ling and Majors, Josh and Lu, Yung-Hsiang and Thiruvathukal, George K.},
 doi = {TBD},
 html = {https://ecommons.luc.edu/cs_facpubs/TBD/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/TBD/},
 url = {https://ecommons.luc.edu/cs_facpubs/TBD/},
 year = {2021}
}

@article{Dematties2020,
 abbr = {Lecture},
 abstract = {Presentation at CyberColombia's Third HPC Summer School: Bio and Data Science Part 1 describes our work on developing a neurocomputational model inspired in specific features found in the mammalian cortex. Part 2 describes our software development efforts to build an HPC version of our work aimed at scalability on leadership class supercomputers, including a discussion of our strong and weak scaling results to date. Part 3 describes our efforts with software engineering and reproducibilty with a discussion of best practices for working with open source and hosting code, datasets, and analyses.},
 author = {Dematties, Dario and Rizzi, Silvio B. and Thiruvathukal, George K.},
 doi = {10.6084/m9.figshare.12762260.v2},
 html = {https://ecommons.luc.edu/cs_facpubs/253/},
 month = {8},
 pdf = {https://ecommons.luc.edu/cs_facpubs/253/},
 url = {https://ecommons.luc.edu/cs_facpubs/253/},
 title = {{Towards High-End Scalability on Bio-Inspired Computational Models}},
 year = {2020}
}

@article{10.3389/fncir.2020.00012,
 abbr = {Frontiers Journal},
 abstract = {A general agreement in psycholinguistics claims that syntax and meaning are unified precisely and very quickly during online sentence processing. Although several theories have advanced arguments regarding the neurocomputational bases of this phenomenon, we argue that these theories could potentially benefit by including neurophysiological data concerning cortical dynamics constraints in brain tissue. In addition, some theories promote the integration of complex optimization methods in neural tissue. In this paper we attempt to fill these gaps introducing a computational model inspired in the dynamics of cortical tissue. In our modeling approach, proximal afferent dendrites produce stochastic cellular activations, while distal dendritic branches–on the other hand–contribute independently to somatic depolarization by means of dendritic spikes, and finally, prediction failures produce massive firing events preventing formation of sparse distributed representations. The model presented in this paper combines semantic and coarse-grained syntactic constraints for each word in a sentence context until grammatically related word function discrimination emerges spontaneously by the sole correlation of lexical information from different sources without applying complex optimization methods. By means of support vector machine techniques, we show that the sparse activation features returned by our approach are well suited—bootstrapping from the features returned by Word Embedding mechanisms—to accomplish grammatical function classification of individual words in a sentence. In this way we develop a biologically guided computational explanation for linguistically relevant unification processes in cortex which connects psycholinguistics to neurobiological accounts of language. We also claim that the computational hypotheses established in this research could foster future work on biologically-inspired learning algorithms for natural language processing applications.},
 author = {Dematties, Dario and Rizzi, Silvio and Thiruvathukal, George K. and Pérez, Mauricio David and Wainselboim, Alejandro and Zanutto, B. Silvano},
 doi = {10.3389/fncir.2020.00012},
 html = {https://ecommons.luc.edu/cs_facpubs/240/},
 issn = {1662-5110},
 journal = {Frontiers in Neural Circuits},
 pages = {12},
 pdf = {https://www.frontiersin.org/articles/10.3389/fncir.2020.00012/full},
 selected = {true},
 title = {A Computational Theory for the Emergence of Grammatical Categories in Cortical Dynamics},
 url = {https://www.frontiersin.org/article/10.3389/fncir.2020.00012},
 volume = {14},
 year = {2020}
}

@article{Brophy_Matthews_Thiruvathukal_2019,
 abbr = {Journal SAJS},
 abstract = {Previous research provides a method for reducing the subjectivity in molar tooth identification of animals in the family Bovidae, by quantifying the occlusal surface of teeth using elliptical Fourier analysis. This current paper specifically tests what effect teeth with medium to late wear have on the identification of bovid teeth when using the form (size and shape) of the occlusal surface to classify specimens.},
 author = {Brophy, Juliet K. and Matthews, Gregory J. and Thiruvathukal, George K.},
 doi = {10.17159/sajs.2019/5496},
 html = {http://ecommons.luc.edu/cs_facpubs/233},
 journal = {South African Journal of Science},
 month = {7},
 pdf = {http://ecommons.luc.edu/cs_facpubs/233},
 title = {An Analysis of the Effect of Tooth Wear on Bovid Identification},
 url = {https://www.sajs.co.za/article/view/5496},
 volume = {115},
 year = {2019}
}

@article{8693826,
 abbr = {IEEE Conference},
 abstract = {Computer vision has achieved impressive progress in recent years. Meanwhile, mobile phones have become the primary computing platforms for millions of people. In addition to mobile phones, many autonomous systems rely on visual data for making decisions, and some of these systems have limited energy (such as unmanned aerial vehicles also called drones and mobile robots). These systems rely on batteries, and energy efficiency is critical. This paper serves the following two main purposes. First, examine the state of the art for low-power solutions to detect objects in images. Since 2015, the IEEE Annual International Low-Power Image Recognition Challenge (LPIRC) has been held to identify the most energy-efficient computer vision solutions. This paper summarizes the 2018 winners' solutions. Second, suggest directions for research as well as opportunities for low-power computer vision.},
 author = {Alyamkin, Sergei and Ardi, Matthew and Berg, Alexander C. and Brighton, Achille and Chen, Bo and Chen, Yiran and Cheng, Hsin-Pai and Fan, Zichen and Feng, Chen and Bo Fu and Gauen, Kent and Goel, Abhinav and Goncharenko, Alexander and Guo, Xuyang and Ha, Soonhoi and Howard, Andrew and Hu, Xiao and Huang, Yuanjun and Kang, Donghyun and Kim, Jaeyoun and Ko, Jong Gook and Kondratyev, Alexander and Lee, Junhyeok and Lee, Seungjae and Lee, Suwoong and Li, Zichao and Liang, Zhiyu and Liu, Juzheng and Liu, Xin and Lu, Yang and Lu, Yung-Hsiang and Malik, Deeptanshu and Nguyen, Hong Hanh and Park, Eunbyung and Repin, Denis and Shen, Liang and Sheng, Tao and Sun, Fei and Svitov, David and Thiruvathukal, George K. and Zhang, Baiwu and Zhang, Jingchi and Zhang, Xiaopeng and Zhuo, Shaojie},
 doi = {10.1109/JETCAS.2019.2911899},
 url = {http://ecommons.luc.edu/cs_facpubs/217},
 html = {http://ecommons.luc.edu/cs_facpubs/217},
 issn = {2156-3365},
 journal = {IEEE Journal on Emerging and Selected Topics in Circuits and Systems},
 keywords = {computer vision;object detection;visual data;decision making;batteries;object detection;energy-efficient computer vision solutions;low-power solutions;energy efficiency;unmanned aerial vehicles;autonomous systems;primary computing platforms;mobile phones;low-power computer vision;Computer vision;Image recognition;Hardware;Mobile handsets;Software;Computer architecture;Benchmark testing;Computer vision;low-power electronics;object detection;machine intelligence},
 month = {6},
 number = {2},
 pages = {411-421},
 pdf = {http://ecommons.luc.edu/cs_facpubs/217},
 title = {Low-Power Computer Vision: Status, Challenges, and Opportunities},
 volume = {9},
 year = {2019}
}

@article{10.1371/journal.pone.0217966,
 abbr = {PLOS ONE},
 abstract = {Many computational theories have been developed to improve artificial phonetic classification performance from linguistic auditory streams. However, less attention has been given to psycholinguistic data and neurophysiological features recently found in cortical tissue. We focus on a context in which basic linguistic units–such as phonemes–are extracted and robustly classified by humans and other animals from complex acoustic streams in speech data. We are especially motivated by the fact that 8-month-old human infants can accomplish segmentation of words from fluent audio streams based exclusively on the statistical relationships between neighboring speech sounds without any kind of supervision. In this paper, we introduce a biologically inspired and fully unsupervised neurocomputational approach that incorporates key neurophysiological and anatomical cortical properties, including columnar organization, spontaneous micro-columnar formation, adaptation to contextual activations and Sparse Distributed Representations (SDRs) produced by means of partial N-Methyl-D-aspartic acid (NMDA) depolarization. Its feature abstraction capabilities show promising phonetic invariance and generalization attributes. Our model improves the performance of a Support Vector Machine (SVM) classifier for monosyllabic, disyllabic and trisyllabic word classification tasks in the presence of environmental disturbances such as white noise, reverberation, and pitch and voice variations. Furthermore, our approach emphasizes potential self-organizing cortical principles achieving improvement without any kind of optimization guidance which could minimize hypothetical loss functions by means of–for example–backpropagation. Thus, our computational model outperforms multiresolution spectro-temporal auditory feature representations using only the statistical sequential structure immerse in the phonotactic rules of the input stream.},
 author = {Dematties, Dario AND Rizzi, Silvio B. AND Thiruvathukal, George K. AND Wainselboim, Alejandro AND Zanutto, B.~Silvano},
 doi = {10.1371/journal.pone.0217966},
 html = {https://ecommons.luc.edu/cs_facpubs/229/},
 journal = {PLOS ONE},
 month = {06},
 number = {6},
 pages = {1-28},
 pdf = {https://journals.plos.org/plosone/article/file?id=10.1371/journal.pone.0217966&type=printable},
 publisher = {Public Library of Science},
 selected = {true},
 title = {Phonetic Acquisition in Cortical Dynamics, a Computational Approach},
 url = {https://doi.org/10.1371/journal.pone.0217966},
 volume = {14},
 year = {2019}
}

@article{gj_matthews_comparison_2018,
 abbr = {Journal},
 author = {Matthews, Gregory J. and Brophy, Juliet K. and Gu, Hongie and Luetkemeier, Maxwell P. and Thiruvathukal, George K.},
 title = {A Comparison of Machine Learning Techniques for Taxonomic Classification of Teeth from the Family Bovidae},
 journal = {Journal of Applied Statistics},
 volume = {45},
 number = {15},
 pages = {2773-2787},
 year  = {2018},
 publisher = {Taylor and Francis},
 abstract = {This study explores the performance of modern, accurate machine learning algorithms on the classification of fossil teeth in the Family Bovidae. Isolated bovid teeth are typically the most common fossils found in southern Africa and they often constitute the basis for paleoenvironmental reconstructions. Taxonomic identification of fossil bovid teeth, however, is often imprecise and subjective. Using modern teeth with known taxons, machine learning algorithms can be trained to classify fossils. Previous work by Brophy et. al. 2014 uses elliptical Fourier analysis of the form (size and shape) of the outline of the occlusal surface of each tooth as features in a linear discriminant analysis framework. This manuscript expands on that previous work by exploring how different machine learning approaches classify the teeth and testing which technique is best for classification. Five different machine learning techniques including linear discriminant analysis, neural networks, nuclear penalized multinomial regression, random forests, and support vector machines were used to estimate these models. Support vector machines and random forests perform the best in terms of both log-loss and misclassification rate; both of these methods are improvements over linear discriminant analysis. With the identification and application of these superior methods, bovid teeth can be classified with higher accuracy.},
 doi = {10.1080/02664763.2018.1441381},
 html = {https://ecommons.luc.edu/cs_facpubs/189/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/189/},
 url = {https://doi.org/10.1080/02664763.2018.1441381}
}

@article{gjm_examining_2017,
 abbr = {Journal},
 author = {Matthews, Gregory J. and Thiruvathukal, George K. and Luetkemeier, Matthew P. and Brophy, Juliet K.},
 title = {Examining the Use of {{Amazon}}'s {{Mechanical Turk}} for Edge Extraction of the Occlusal Surface of Fossilized Bovid Teeth.},
 abstract = {In order to reconstruct environments associated with Plio-Pleistocene hominins in southern Africa, researchers frequently rely upon the animals associated with the hominins, in particular, animals in the Family Bovidae. Bovids in southern Africa are typically identified by their teeth. However, identifying the taxon of a bovid tooth is challenging due to various biasing factors. Furthermore, inaccurate identification of fossil bovids can have significant consequences on the reconstructed paleoenvironment. Recent research on the classification of bovid fossil teeth has relied on using elliptical Fourier analysis to summarize the shape of the outline of the occlusal surface of the tooth and the resulting harmonic amplitudes. Currently, an expert in the field must manually place landmarks around the edges of each tooth which is slow and time consuming. This study tests whether it is possible to crowdsource this task, while maintaining the necessary level of quality needed to perform a statistical analysis on each tooth. Amazon Mechanical Turk workers place landmarks on the edge of the tooth which is compared to the performance of an expert in the field. The results suggest that crowdsourcing the digitization process is reliable and replicable. With the technical aspects of digitization managed, researchers can concentrate on analyzing and interpreting the data.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 journal = {PLOS ONE},
 number = {7},
 volume = {12},
 year = {2017},
 url = {https://ecommons.luc.edu/cs_facpubs/150/},
 html = {https://ecommons.luc.edu/cs_facpubs/150/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/150/},
}

@article{doi:10.4137/EBO.S32757,
 abbr = {Journal},
author = {Reisman, Steven and Hatzopoulos, Thomas and Läufer, Konstantin and Thiruvathukal, George K. and Putonti, Catherine},
title ={A Polyglot Approach to Bioinformatics Data Integration: A Phylogenetic Analysis of HIV-1},
journal = {Evolutionary Bioinformatics},
volume = {12},
number = {},
pages = {EBO.S32757},
year = {2016},
doi = {10.4137/EBO.S32757},
note ={PMID: 26819543},

URL = {https://doi.org/10.4137/EBO.S32757},
html = {https://doi.org/10.4137/EBO.S32757},
pdf = {https://doi.org/10.4137/EBO.S32757},
eprint = {https://doi.org/10.4137/EBO.S32757},
abstract = {As sequencing technologies continue to drop in price and increase in throughput, new challenges emerge for the management and accessibility of genomic sequence data. We have developed a pipeline for facilitating the storage, retrieval, and subsequent analysis of molecular data, integrating both sequence and metadata. Taking a polyglot approach involving multiple languages, libraries, and persistence mechanisms, sequence data can be aggregated from publicly available and local repositories. Data are exposed in the form of a RESTful web service, formatted for easy querying, and retrieved for downstream analyses. As a proof of concept, we have developed a resource for annotated HIV-1 sequences. Phylogenetic analyses were conducted for >6,000 HIV-1 sequences revealing spatial and temporal factors influence the evolution of the individual genes uniquely. Nevertheless, signatures of origin can be extrapolated even despite increased globalization. The approach developed here can easily be customized for any species of interest.}
}



@article{gregor_von_laszewski_making_2000,
 abbr = {Journal},
 author = {von Laszewski, Gregor and Thiruvathukal, George K. and Foster, Ian},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {0926-9630},
 journal = {Future Generation Computing Systems (Elsevier)},
 pages = {195--213},
 shorttitle = {Making Large-Scale Telemedicine Work},
 title = {Making Large-Scale Telemedicine Work: A Computational Infrastructure for Telemedicine.},
 volume = {79},
 year = {2000}
}

@article{george_k_thiruvathukal_java_2000,
 abbr = {Journal},
 author = {Thiruvathukal, George K. and Dickens, Phil M. and Bhatti, Shahzad},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1040-3108},
 journal = {Concurrency: Practice and Experience},
 pages = {1093--1116},
 shorttitle = {Java on Networks of Workstations (JavaNOW)},
 title = {Java on Networks of Workstations (JavaNOW): A Parallel Computing Framework Inspired by Linda and the Message Passing Interface (MPI)},
 abstract = {Networks of workstations are a dominant force in the distributed computing arena, due primarily to the excellent price/performance ratio of such systems when compared to traditionally massively parallel architectures. It is therefore critical to develop programming languages and environments that can help harness the raw computational power available on these systems. In this article, we present JavaNOW (Java on Networks of Workstations), a Java‐based framework for parallel programming on networks of workstations. It creates a virtual parallel machine similar to the MPI (Message Passing Interface) model, and provides distributed associative shared memory similar to the Linda memory model but with a richer set of primitive operations.  JavaNOW provides a simple yet powerful framework for performing computation on networks of workstations. In addition to the Linda memory model, it provides for shared objects, implicit multithreading, implicit synchronization, object dataflow, and collective communications similar to those defined in MPI. JavaNOW is also a component of the Computational Neighborhood, a Java‐enabled suite of services for desktop computational sharing. The intent of JavaNOW is to present an environment for parallel computing that is both expressive and reliable and ultimately can deliver good to excellent performance. As JavaNOW is a work in progress, this article emphasizes the expressive potential of the JavaNOW environment and presents preliminary performance results only.},
 url = {https://ecommons.luc.edu/cs_facpubs/256/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/256/},
 html = {https://ecommons.luc.edu/cs_facpubs/256/},
 volume = {12},
 year = {2000}
}

@article{ian_foster_wide-area_1998,
 abbr = {Journal},
 author = {Foster, Ian and Geisler, Jonathan and Gropp, William and Karonis, Nicholas and Lusk, Ewing and Thiruvathukal, George K. and Tuecke, Steven},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {0167-8191},
 journal = {Journal of Parallel Computing},
 number = {12},
 pages = {1735},
 title = {Wide-Area Implementation of the Message Passing Interface},
 abstract={The Message Passing Interface (MPI) can be used as a portable, high-performance programming model for wide-area computing systems. The wide-area environment introduces challenging problems for the MPI implementor, due to the heterogeneity of both the underlying physical infrastructure and the software environment at different sites. In this article, we describe an MPI implementation that incorporates solutions to these problems. This implementation has beenconstructed by extending the Argonne MPICH implementation of MPI to use communicationservices provided by the Nexus communication library and authentication, resource allocation, process creation/management, and information services provided by the I-Soft system (initially) and the Globus metacomputing toolkit (work in progress). Nexus provides multimethod communication mechanisms that allow multiple communication methods to be used in a single computation with a uniform interface; I-Soft and Globus provided standard authentication,resource management, and process management mechanisms. We describe how these various mechanisms are supported in the Nexus implementation of MPI and present performance resultsfor this implementation on multicomputers and networked systems. We also discuss how more advanced services provided by the Globus metacomputing toolkit are being used to construct a second-generation wide-area MPI.},
 volume = {24},
 url = {https://ecommons.luc.edu/cs_facpubs/38/},
 html = {https://ecommons.luc.edu/cs_facpubs/38/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/38/},
 year = {1998}
}

@article{ian_foster_computational_1998,
 abbr = {Journal},
 author = {Foster, Ian and von Laszewski, Gregor and Thiruvathukal, George K. and Toonen, Brian},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {0167-739X},
 journal = {Future Generation Computer Systems Future Generation Computer Systems},
 publisher = {Elsevier},
 number = {1-2},
 pages = {109--123},
 abstract = {Emerging telemedicine applications require the ability to exploit diverse, geographically distributed resources. These applications use high-speed neworks to integrate supercomputers, large databases, archival storage devices, advanced visualization devices, and/or sophisticated instruments. This form of networked virtual supercomputers is also known as metacomputers and is being used by many other scientific applications areas. In this article, we analyze requirements necessary for a telemedicine computing infrastructure and compare them with requirements found in a typical metacomputing environment. We will show that metacomputing environments can be used to enable a more powerful and unified computational infrastructure for telemedicine. The Globus metacomputing environment can provide the necessary basis to enable a large scale telemedical infrastructure. Globus is designed in a modular fashion and can be extended to support the specific requirements for telemedicine.},
 title = {A Computational Framework for Telemedicine},
 volume = {14},
 url = {https://ecommons.luc.edu/cs_facpubs/41/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/41/},
 html = {https://ecommons.luc.edu/cs_facpubs/41/},
 year = {1998}
}

@article{george_k_thiruvathukal_reflective_1998,
 abbr = {Journal},
 author = {Thiruvathukal, George K. and Thomas, Lovely S. and Korczynski, Andrew T.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1040-3108},
 journal = {Concurrency: Practice and Experience},
 number = {11-13},
 pages = {911--925},
 title = {Reflective Remote Method Invocation},
 abstract = {Remote Method Invocation (RMI) is available in the current Java language design and implementation, providing the much-needed capability of allowing objects running in different Java processes to collaborate using a variation on the popular Remote Procedure Call (RPC).
Although RMI provides features which are desirable for high-performance distributed computing, its design and implementation are deficient in key areas of importance to the high-performance computing community in general. This paper addresses the key deficiencies of RMI and how these deficiencies affect the design and implementation of distributed object applications.
Reflective RMI (RRMI) is an open RMI implementation which makes better use of the object-oriented features of Java. RRMI is so-called reflective because it directly employs the reflection capabilities of the current Java language to invoke methods remotely. RRMI makes use of the dynamic class loader (a class called NetClassLoader) to allow client/server applications to be built for high-performance computing systems without having all of the class files present on all nodes in a parallel computation. Among other features discussed are support for asynchronous remote method invocations with deferred reply and exception semantics.},
 volume = {10},
 url = {https://ecommons.luc.edu/cs_facpubs/11/},
 html = {https://ecommons.luc.edu/cs_facpubs/11/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/11/},
 year = {1998}
}

@article{william_t_oconnell_distributed_1997,
 abbr = {Journal},
 author = {O'Connell, William T. and Thiruvathukal, George K. and Christopher, Thomas W.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1206-212X},
 journal = {International Journal of Computers and Applications},
 number = {2},
 pages = {115--122},
 shorttitle = {Distributed Memo},
 title = {Distributed Memo: Heterogeneously Concurrent Programming with a Shared Directory of Unordered Queues},
 volume = {19},
 url = {https://ecommons.luc.edu/cs_facpubs/44/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/44/},
 abstract = {Heterogeneously distributed and parallel computing environments are highly dependent on hardware, data migration, and protocols. The result is significant difficulty in software reuse, portability across platforms, and an increased overall development effort. The appearance of a shared directory of unordered queues can be provided by integrating heterogeneous computers transparently. This integration provides a conducive environment for parallel and distributed application development, by abstracting the issues of hardware and communication. Object oriented technology is exploited to provide this seamless environment.},
 year = {1997}
}

@article{ian_foster_technologies_1997,
 abbr = {Journal},
 author = {Foster, Ian and Thiruvathukal, George K. and Tuecke, Steven},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1040-3108},
 journal = {Concurrency: Practice and Experience},
 number = {6},
 pages = {465},
 shorttitle = {Technologies for Ubiquitous Supercomputing},
 title = {Technologies for Ubiquitous Supercomputing: A Java Interface to the Nexus Communication System},
 abstract = {We use the term ubiquitous supercomputing to refer to systems that integrate low- and mid-range computing systems, advanced networks and remote high-end computers with the goal of enhancing the computational power accessible from local environments. Such systems promise to enable new applications in areas as diverse as smart instruments and collaborative environments. However, they also demand tools for transporting code between computers and for establishing flexible, dynamic communication structures. In this article, we propose that these requirements be satisfied by introducing Java classes that implement the global pointer and remote service request mechanisms defined by a communication library called Nexus. Java supports transportable code; Nexus provides communication support and represents the core communication framework for Globus, a project building infrastructure for ubiquitous supercomputing. We explain how this NexusJava library is implemented and illustrate its use with examples.},
 volume = {9},
 url = {https://ecommons.luc.edu/cs_facpubs/8/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/8/},
 year = {1997}
}

@article{ComputerCAM2,
 abbr = {IEEE Magazine},
 abstract = {Millions of network cameras have been deployed worldwide. Real-time data from many network cameras can offer instant views of multiple locations for many applications. We describe the real-time data available from these cameras and potential applications.},
 author = {Y. {Lu} and G. K. {Thiruvathukal} and A. S. {Kaseb} and K. {Gauen} and D. {Rijhwani} and R. {Dailey} and D. {Malik} and Y. {Huang} and S. {Aghajanzadeh} and M. M. {Guo}},
 doi = {10.1109/MC.2019.2906841},
 issn = {1558-0814},
 journal = {Computer},
 keywords = {cameras;network cameras;Cameras;IP networks;Urban areas;Real-time systems;Streaming media;Internet;Visualization},
 month = {10},
 number = {10},
 pages = {30-40},
 pdf = {http://ecommons.luc.edu/cs_facpubs/215},
 selected = {true},
 title = {See the World Through Network Cameras},
 volume = {52},
 year = {2019},
 url = {https://ecommons.luc.edu/cs_facpubs/215/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/215/},
 html = {http://ecommons.luc.edu/cs_facpubs/215/},
}

@article{8594612,
 abbr = {IEEE Magazine},
 abstract = {Hundreds of millions of network cameras have been installed throughout the world. Each is capable of providing a vast amount of real-time data. Analyzing the massive data generated by these cameras requires significant computational resources and the demands may vary over time. Cloud computing shows the most promise to provide the needed resources on demand. In this paper, we investigate how to allocate cloud resources when analyzing real-time data streams from network cameras. A resource manager considers many factors that affect its decisions, including the types of analysis, the number of data streams, and the locations of the cameras. The manager then selects the most cost-efficient types of cloud instances (e.g., central processing unit versus general-purpose graphics processing units) to meet the computational demands for analyzing streams. We evaluate the effectiveness of our approach using Amazon Web Services. Experiments demonstrate more than 50\% cost reduction for real workloads.},
 author = {Z. {Kapach} and A. {Ulmer} and D. {Merrick} and A. {Alikhan} and Y. {Lu} and A. {Mohan} and A. S. {Kaseb} and G. K. {Thiruvathukal}},
 doi = {10.1109/MMUL.2018.2890255},
 issn = {1941-0166},
 journal = {IEEE MultiMedia},
 keywords = {cloud computing;data visualisation;optimisation;resource allocation;Web services;cloud resource optimization;visual data;network cameras;cloud computing;resource manager;cost-efficient types;cloud instances;computational demands;computational resources;real-time data streams;Amazon Web services;multiple streams processing;Cloud computing;Cameras;Streaming media;Graphics processing units;Real-time systems;Central Processing Unit;Visualization},
 month = {7},
 number = {3},
 pages = {31-41},
 pdf = {http://ecommons.luc.edu/cs_facpubs/208},
 title = {Cloud Resource Optimization for Processing Multiple Streams of Visual Data},
 volume = {26},
 html = {http://ecommons.luc.edu/cs_facpubs/208},
 url = {http://ecommons.luc.edu/cs_facpubs/208},
 pdf = {http://ecommons.luc.edu/cs_facpubs/208},
 year = {2019}
}

@article{8291785,
 abbr = {Magazine},
 abstract = {Former CiSE EICs reflect on the magazine’s 20th anniversary.},
 author = {Sullivan, Francis and Chonacky, Norman and Beichl, Isabel and Thiruvathukal, George K.},
 doi = {10.1109/MCSE.2018.011111118},
 issn = {1558-366X},
 journal = {Computing in Science Engineering},
 keywords = {anniversary;history of computing;Computing in Science & Engineering},
 month = {1},
 number = {1},
 pages = {3-7},
 title = {Former CiSE EICs Reflect on the Magazines 20th Anniversary},
 volume = {20},
 year = {2018},
 url = {https://ecommons.luc.edu/cs_facpubs/191/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/191/},
 html = {https://ecommons.luc.edu/cs_facpubs/191/},
}

@article{lorena_a_barba_reproducible_2017,
 abbr = {Magazine},
 author = {Barba, Lorena A. and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {85--87},
 title = {Reproducible {{Research}} for {{Computing}} in {{Science}} \& {{Engineering}}},
 volume = {19},
 year = {2017},
 url = {https://ecommons.luc.edu/cs_facpubs/188/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/188/},
 html = {https://ecommons.luc.edu/cs_facpubs/188/},
}

@article{george_f_hurlburt_graph_2017,
 abbr = {Magazine},
 author = {Hurlburt, George F. and Thiruvathukal, George K. and Lee, Maria R.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1520-9202},
 journal = {IT Professional},
 number = {6},
 pages = {21--25},
 shorttitle = {The {{Graph Database}}},
 title = {The Graph Database: Jack of All Trades or Just Not SQL?},
 volume = {19},
 year = {2017},
 url = {https://ecommons.luc.edu/cs_facpubs/187/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/187/},
 html = {https://ecommons.luc.edu/cs_facpubs/187/},
}

@article{tiffany_barnes_need_2016,
 abbr = {Magazine},
 author = {Barnes, Tiffany and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {0001-0782},
 journal = {Communications of the ACM},
 number = {3},
 pages = {33--34},
 title = {The {{Need}} for {{Research}} in {{Broadening Participation}}},
 volume = {59},
 year = {2016},
 url = {https://ecommons.luc.edu/cs_facpubs/129/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/129/},
 html = {https://ecommons.luc.edu/cs_facpubs/129/},
}

@article{tiffany_barnes_best_2016,
 abbr = {Magazine},
 author = {Barnes, Tiffany and Payton, Jamie and Thiruvathukal, George K. and Boyer, Kristy Elizabeth and Forbes, Jeffrey},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {3},
 pages = {11--13},
 title = {Best of {{RESPECT}}, {{Part}} 2},
 volume = {18},
 year = {2016},
 url = {https://ecommons.luc.edu/cs_facpubs/125/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/125/},
 html = {https://ecommons.luc.edu/cs_facpubs/125/},
}

@article{george_k_thiruvathukal_how_2016,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 abstract = {As sci-fi readers and film buffs know, many of these ideas that have been foreshadowed--and that seem far-fetched in--fiction are beginning to seem possible. Whether we are considering the benevolent Commander Data in Star Trek: The Next Generation or fearing the terrifying Terminator, we are entering an era where AI as is rapidly entering the public discourse.},
 journal = {VentureBeat},
 title = {How {{AI}} Is Bringing {{Hollywood}} to Life},
 year = {2016},
 url = {https://ecommons.luc.edu/cs_facpubs/120/},
 html = {https://ecommons.luc.edu/cs_facpubs/120/},
}

@article{george_k_thiruvathukal_fin_2016,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {4--6},
 title = {El {{Fin}}},
 volume = {18},
 year = {2016},
 url = {https://ecommons.luc.edu/cs_facpubs/123/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/123/},
 html = {https://ecommons.luc.edu/cs_facpubs/123/},
}

@article{george_k_thiruvathukal_beyond_2016,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 journal = {EdTech Digest},
 title = {Beyond {{Pythagoras}}},
 year = {2016},
 url = {https://ecommons.luc.edu/cs_facpubs/121/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/121/},
 html = {https://ecommons.luc.edu/cs_facpubs/121/},
}


@article{george_k_thiruvathukal_next_2015,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {1},
 pages = {4--5},
 title = {The {{Next Generation}} of {{Computational Science}} and {{Engineering}}},
 volume = {17},
 year = {2015},
 doi = {10.1109/MCSE.2015.26},
 url = {https://ecommons.luc.edu/cs_facpubs/258/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/258/},
 html = {https://ecommons.luc.edu/cs_facpubs/258/},
}

@article{george_k_thiruvathukal_cloudy_2015,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 journal = {Computing in Science and Engineering},
 title = {Cloudy with a {{Chance}} of {{Sunshine}}, or the {{Future}} of {{Magazine Publishing}} ({{Article}}, 2015) [{{WorldCat}}.Org]},
 year = {2015},
 url = {https://ecommons.luc.edu/cs_facpubs/124/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/124/},
}

@article{george_k_thiruvathukal_all-digital_2015,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {3},
 pages = {4--5},
 title = {The {{All}}-{{Digital Future}} and {{Digital CiSE}}},
 volume = {17},
 year = {2015},
 url = {https://ecommons.luc.edu/cs_facpubs/260/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/260/},
}

@article{andy_terrel_scientific_2015,
 abbr = {Magazine},
 author = {Terrel, Andy and Tobis, Michael and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {1},
 pages = {8--10},
 title = {Scientific {{Software Communities}}},
 volume = {17},
 year = {2015},
 url = {https://ecommons.luc.edu/cs_facpubs/262/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/262/},
}

@article{manish_parashar_extreme_2014,
 abbr = {Magazine},
 author = {Parashar, Manish and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {8--10},
 title = {Extreme {{Data}} [{{Guest Editors}}' {{Introduction}}]},
 volume = {16},
 year = {2014},
 url = {https://ecommons.luc.edu/cs_facpubs/131/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/131/},
}

@article{george_k_thiruvathukal_what_2014,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {4--6},
 title = {What We Publish in {{CiSE}}},
 volume = {16},
 year = {2014},
 url = {https://ecommons.luc.edu/cs_facpubs/132/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/132/},
}

@article{george_k_thiruvathukal_who_2013,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {1},
 pages = {4--6},
 shorttitle = {Who Needs Tablets?},
 title = {Who {{Needs Tablets}}? {{We Do}}},
 volume = {15},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/134/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/134/},
}

@article{george_k_thiruvathukal_whats_2013,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {4--5},
 title = {What's in an {{Algorithm}}?},
 volume = {15},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/130/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/130/},
}

@article{george_k_thiruvathukal_productivity_2013,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {3},
 pages = {4--5},
 title = {Productivity in the {{Cognitive Overload Era}}},
 volume = {15},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/136/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/136/},
}

@article{george_k_thiruvathukal_computational_2013,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {4--5},
 title = {Computational {{Science}}, {{Demystified}} - the {{Future}}, {{Revealed}}  and {{CiSE}}, 2013},
 volume = {15},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/135/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/135/},
}

@article{george_k_thiruvathukal_cloud_2013,
 abbr = {Magazine},
 author = {Thiruvathukal, George K. and Parashar, Manish},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {8--9},
 title = {Cloud {{Computing}} [{{Guest Editors}}' {{Introduction}}]},
 volume = {15},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/131/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/131/},
}

@article{george_k_thiruvathukal_digging_2012,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {4--5},
 title = {Digging into {{Data}}},
 volume = {14},
 year = {2012},
 url = {https://ecommons.luc.edu/cs_facpubs/265/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/265/},
}

@article{george_k_thiruvathukal_accelerating_2012,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {4--5},
 title = {Accelerating {{Learning}} with {{Distance Education}} and {{Open Courseware}}},
 volume = {14},
 year = {2012},
 url = {https://ecommons.luc.edu/cs_facpubs/259/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/259/},
}

@article{dejan_milojicic_innovation_2012,
 abbr = {Magazine},
 author = {Milojicic, Dejan and Arlitt, Martin and Seligmann, Doree D. and Thiruvathukal, George K. and Timmerer, Christian},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {0018-9162},
 journal = {Computer},
 number = {9},
 pages = {101--105},
 shorttitle = {Innovation {{Mashups}}},
 title = {Innovation {{Mashups}}: {{Academic Rigor Meets Social Networking Buzz}}},
 volume = {45},
 year = {2012},
 url = {https://ecommons.luc.edu/cs_facpubs/72/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/72/},
}

@article{laufer_moving_2011,
 abbr = {Magazine},
 author = {Läufer, Konstantin and Thiruvathukal, George K. and Dennis, David B.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {5},
 pages = {84--89},
 shorttitle = {Moving Academic Department Functions to Social Networks and Clouds},
 title = {Moving {{Academic Department Functions}} to {{Social Networks}} and {{Clouds}}: {{Initial Experiences}}},
 volume = {13},
 year = {2011},
 url = {https://ecommons.luc.edu/cs_facpubs/144/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/144/},
}

@article{george_k_thiruvathukal_books_2011,
 abbr = {Magazine},
 abstract = {Two books are reviewed in this issue.},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {1},
 pages = {5--8},
 shorttitle = {{Book Review: Networks, Crowds, and Markets}},
 title = {{Books [reviews of "Networks, Crowds, and Markets: Reasoning about a Highly-Connected World; Easley, D. and Kleinberg, J.; 2010 and "Introduction to High Performance Computing for Scientists and Engineers"; Hager, G. and Wellein, G.; 2011)]}},
 volume = {13},
 year = {2011},
 url = {https://ecommons.luc.edu/cs_facpubs/264/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/264/},
}

@article{george_k_thiruvathukal_beyond_2011,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {3},
 pages = {4--5},
 title = {Beyond {{CiSE}} and {{Back}} to the {{Future}}},
 volume = {13},
 year = {2011},
 url = {https://ecommons.luc.edu/cs_facpubs/18/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/18/},
}

@article{george_k_thiruvathukal_your_2010,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {5--6},
 title = {Your {{Local Cloud}}-{{Enabled Library}}},
 volume = {12},
 year = {2010},
 url = {https://ecommons.luc.edu/cs_facpubs/17/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/17/},
}

@article{george_k_thiruvathukal_virtualization_2010,
 abbr = {Magazine},
 author = {Thiruvathukal, George K. and Läufer, Konstantin and Hinsen, Konrad and Kaylor, Joe P.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {52--61},
 title = {Virtualization for {{Computational Scientists}}},
 volume = {12},
 year = {2010},
 url = {https://ecommons.luc.edu/cs_facpubs/16/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/16/},
}

@article{laufer_scientific_2009,
 abbr = {Magazine},
 author = {Läufer, Konstantin and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {5},
 pages = {68--75},
 shorttitle = {Scientific {{Programming}}},
 title = {Scientific {{Programming}}: {{The Promises}} of {{Typed}}, {{Pure}}, and {{Lazy Functional Programming}}: {{Part II}}},
 volume = {11},
 year = {2009},
 url = {https://ecommons.luc.edu/cs_facpubs/25/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/25/},
}

@article{konrad_hinsen_essential_2009,
 abbr = {Magazine},
 author = {Hinsen, Konrad and Läufer, Konstantin and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {84--91},
 shorttitle = {Essential {{Tools}}},
 title = {Essential {{Tools}}: {{Version Control Systems}}},
 volume = {11},
 year = {2009},
 url = {https://ecommons.luc.edu/cs_facpubs/27/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/27/},
}

@article{k_laufer_putting_2009,
 abbr = {Magazine},
 author = {Läufer, Konstantin and Thiruvathukal, George K. and Nishimura, Ryohei and Martínez-Eiroa, Carlos Ramírez},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {62--68},
 title = {Putting a {{Slug}} to {{Work}}},
 volume = {11},
 year = {2009},
 url = {https://ecommons.luc.edu/cs_facpubs/23/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/23/},
}

@article{george_k_thiruvathukal_introducing_2009,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {8--10},
 title = {Introducing {{Computing Now}}},
 volume = {11},
 year = {2009},
 url = {https://ecommons.luc.edu/cs_facpubs/24/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/24/},
}

@article{george_k_thiruvathukal_computational_2009,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {4--4},
 title = {Computational {{Thinking}} ... and {{Doing}}},
 volume = {11},
 year = {2009},
 url = {https://ecommons.luc.edu/cs_facpubs/26/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/26/},

}

@article{volodymyr_kindratenko_high-performance_2008,
 abbr = {Magazine},
 abstract = {As chip designers struggle to increase the speed of conventional microprocessors, the scientific computing community is turning its attention to alternative architectures that utilize computational accelerators to improve the application performance. This special issue of CiSE examines several examples of computationally demanding applications implemented on novel high-performance computing architectures and points out the challenges and opportunities that these new architectures bring up.},
 author = {Kindratenko, Volodymyr and Thiruvathukal, George K. and Gottlieb, Steven},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {13--15},
 title = {High Performance Computing Applications on Novel Architectures},
 volume = {10},
 year = {2008},
 url = {https://www.computer.org/publications/tech-news/computing-now/novel-architectures-and-accelerators},
 html = {https://www.computer.org/publications/tech-news/computing-now/novel-architectures-and-accelerators},
}

@article{kaylor_virtual_2008,
 abbr = {Magazine},
 author = {Kaylor, Joe P. and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {65--69},
 title = {A {{Virtual Computing Laboratory}}},
 volume = {10},
 year = {2008},
 pdf = {https://ecommons.luc.edu/cs_facpubs/22/},
 url = {https://ecommons.luc.edu/cs_facpubs/22/},

}

@article{george_k_thiruvathukal_what_2008,
 abbr = {Magazine},
 author = {Thiruvathukal, George K. and Läufer, Konstantin},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {76--81},
 title = {What I Did on My Summer Vacation},
 volume = {10},
 year = {2008}
}

@article{george_k_thiruvathukal_if_2008,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {62--64},
 title = {If We Build It, Will They Come?},
 volume = {10},
 year = {2008},
 url = {https://ecommons.luc.edu/cs_facpubs/13/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/13/},
}

@article{bill_feiereisen_at_2008,
 abbr = {Magazine},
 author = {Feireisen, Bill and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 note = {OCLC: 222595476},
 number = {2},
 pages = {60--64},
 title = {At {{Issue}}},
 volume = {10},
 year = {2008},
 url = {https://ecommons.luc.edu/cs_facpubs/13/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/13/},
}

@article{konstantin_laufer_hike_2007,
 abbr = {Magazine},
 abstract = {By incorporating automated component, integration, and acceptance testing into the various tiers of a lightweight lava 2 Enterprise Edition (J2EE) Web application architecture, developers can shorten the development cycle and increase the quality of their work},
 author = {Läufer, Konstantin and Thiruvathukal, George K. and González, Benjamin},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {1},
 title = {A Hike through a Post-EJB J2EE Web Application Architecture, Part III},
 volume = {9},
 year = {2007},
 url = {https://ecommons.luc.edu/cs_facpubs/263/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/263/},
}

@article{george_k_thiruvathukal_project_2007,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {70--75},
 shorttitle = {Project Hosting},
 title = {Project {{Hosting}}: {{Expanding}} the {{Scientific Programmer}}'s {{Toolbox}}},
 volume = {9},
 year = {2007},
 url = {https://ecommons.luc.edu/cs_facpubs/34/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/34/},
}

@article{george_k_thiruvathukal_unit_2006,
 abbr = {Magazine},
 author = {Thiruvathukal, George K. and Läufer, Konstantin and González, Benjamin},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {6},
 pages = {76--87},
 title = {Unit {{Testing Considered Useful}}},
 volume = {8},
 year = {2006},
 url = {https://ecommons.luc.edu/cs_facpubs/33/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/33/},
}

@article{george_k_thiruvathukal_home_2006,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {1},
 pages = {84--91},
 title = {Home {{Networking}}},
 volume = {8},
 year = {2006},
 url = {https://ecommons.luc.edu/cs_facpubs/32/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/32/},
}

@article{george_k_thiruvathukal_cluster_2005,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {2},
 pages = {11--13},
 title = {Cluster {{Computing}}},
 volume = {7},
 year = {2005},
 url = {https://ecommons.luc.edu/cs_facpubs/47/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/47/},

}

@article{george_k_thiruvathukal_xml_2004,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 pages = {74--80},
 title = {{{XML}} and {{Computational Science}}},
 volume = {6},
 year = {2004},
 url = {https://ecommons.luc.edu/cs_facpubs/10/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/10/},
}

@article{george_k_thiruvathukal_plone_2004,
 abbr = {Magazine},
 author = {Thiruvathukal, George K. and Läufer, Konstantin},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {4},
 pages = {88--95},
 title = {Plone and Content Management},
 volume = {6},
 year = {2004},
 url = {https://ecommons.luc.edu/cs_facpubs/30/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/30/},
}

@article{george_k_thiruvathukal_natural_2004,
 abbr = {Magazine},
 author = {Thiruvathukal, George K. and Läufer, Konstantin},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 pages = {86--92},
 title = {Natural {{XML}} for {{Data Binding}}, {{Processing}}, and {{Persistence}}},
 volume = {6},
 year = {2004},
 url = {https://ecommons.luc.edu/cs_facpubs/9/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/9/},

}

@article{george_k_thiruvathukal_gentoo_2004,
 abbr = {Magazine},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 issn = {1521-9615},
 journal = {Computing in Science and Engineering},
 number = {5},
 pages = {66--74},
 shorttitle = {Gentoo Linux},
 title = {Gentoo Linux: The next Generation of Linux},
 volume = {6},
 year = {2004},
 url = {https://ecommons.luc.edu/cs_facpubs/31/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/31/},
}

@inproceedings{GRS-Posters-4,
 abbr = {Loyola},
 abstract = {Trust in open-source software is a cornerstone of scientific progress and a foundation of high-quality public services. Just as standards are integral when judging the efficacy of a novel pharmaceutical compound or determining the spread of a new disease, the software used to make those determinations should be useful, error-free, reliable, performant, and secure. A small bug in an application, library, or framework can lead to economic loss and even loss of life. We rely on software developers to be dynamic and responsive to user review and bug-reporting. Our team developed an open-source modular pipeline to perform empirical investigations of software quality. A key innovation of our approach is to look at projects “from a distance” similar to methods used in climate, e.g. satellite images being used to observe environmental impacts in air quality/rain forests. Instead of looking at language-specific source code features, our pipeline uses a language-agnostic high-level approach to track software quality by focusing on the development process itself, which yields great insight into the processes programmers use to write and maintain their software. Our distributed modular approach to analytics allows the pipeline to be easily extended to support additional metrics in future work. We store extracted data in an embedded SQLite database, which means that analysis can proceed without complex server setup, let alone hosting the software on dedicated servers. Our analytical modules are designed for efficiency, and future runs of our software only collect missing data, supporting the incremental analysis of known, important open-source projects.},
 author = {Miller, Allan and Thiruvathukal, George K. and Läufer, Konstantin and Amobi, Emmanuel and Higgins, Sean and Maliakal, Linette and Meister, Emily and Putter, Jean-Luc and Rose, Alex and Synovic, Nicholas and Von Hatten, Sophie and Warkentin, Jonathan and Zugschwert, Martin},
 booktitle = {Graduate Research Symposium 2020},
 url = {http://ecommons.luc.edu/grs/2020/posters/4},
 html = {http://ecommons.luc.edu/grs/2020/posters/4},
 pdf = {http://ecommons.luc.edu/grs/2020/posters/4},
 title = {Toward a containerized pipeline for longitudinal analysis of open-source software projects},
 year = {2020}
}

@misc{woolf_2018,
 abbr = {Archive},
 author = {Caughie, Pamela L. and Hayward, Nicholas J. and Hussey, Mark and Shillingsburg, Peter J. and Thiruvathukal, George K.},
 url = {http://woolfonline.com},
 title = {Woolf Online},
 year = {2018}
}

@misc{juliet_k_brophy_quantitative_2015,
 abbr = {Colloquium},
 address = {UCLA},
 author = {Brophy, Juliet K. and Matthews, Gregory J. and Thiruvathukal, George K.},
 title = {Quantitative {{Morphological Analysis}} of {{Bovid Teeth Using Elliptical Fourier Function Analyses}}},
 year = {2015}
}

@misc{gkt_hivdb,
 abbr = {Archive},
 author = {Thiruvathukal, George K. and Putonti, Catherine and Reisman, Steven},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 url = {http://hivdb.cs.luc.edu},
 year = {2015}
}

@misc{george_k_thiruvathukal_gcasr_2015,
 abbr = {Workshop},
 author = {Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 shorttitle = {{GCASR 15}},
 title = {{GCASR 15: Middleware for Collaborative Distributed/Mobile Applications: XMPP or Reactive HTTP?}},
 year = {2015}
}

@misc{catherine_putonti_organised_2015,
 abbr = {Dataset},
 author = {Putonti, Catherine and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 publisher = {{Figshare}},
 title = {Organised Genomic HIV and Pseudomonas Sequence Data},
 year = {2015},
 url = "https://figshare.com/articles/dataset/hivdb/1564844",
 month = {10},
 doi = "10.6084/m9.figshare.1564844.v3"
}
@inproceedings{mark_lewis_scala_2014,
 abbr = {Workshop},
 abstract = {Scala is one of a new breed of hybrid languages with both object-oriented and functional aspects. It happens to be the most successful of these languages coming in at \#12 on the Red Monk language ranking and leading all languages in their 2nd tier. This workshop will introduce participants to the Scala programming language, how it can be used effectively in introductory CS courses, and the parallel tools that are available for it. We begin with simple examples in the REPL and scripting environment, then look at doing larger, object-oriented projects. We finish off with an exploration of composable futures and the Akka actor library. Participants are strongly recommended to bring a laptop.},
 address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
 author = {Lewis, Mark and Läufer, Konstantin and Thiruvathukal, George K.},
 booktitle = {45th ACM technical symposium / Computer science education (SIGCSE '14)},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-1-4503-2605-6},
 title = {Scala for Introductory CS and Parallelism (Workshop)},
 url = {https://scalaworkshop.cs.luc.edu},
 html = {https://scalaworkshop.cs.luc.edu},
 year = {2014}
}

@misc{gcasr_2013_tablets,
 abbr = {Workshop},
 author = {Dias, Thomas Delgado and Yan, Xian and Läufer, Konstantin and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 shorttitle = {{GCASR 15}},
 title = {Building Capable, Energy-Efficient, Flexible Visualization and Sensing Clusters from Commodity Tablets},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/66/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/66/},
 html = {https://ecommons.luc.edu/cs_facpubs/66/},
}
@misc{gcasr_2013_environmental_data,
 abbr = {Workshop},
 author = {Stasiuk, Paul and Läufer, Konstantin and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 shorttitle = {GCASR 13},
 title = {Network Technologies Used to Aggregate Environmental Data},
 year = {2013},
 url = "https://ecommons.luc.edu/cs_facpubs/65/",
 pdf = {https://ecommons.luc.edu/cs_facpubs/65/},
 html = {https://ecommons.luc.edu/cs_facpubs/65/},
}
@inproceedings{mark_lewis_using_2013,
 abbr = {Workshop},
 abstract = {Various hybrid-paradigm languages, designed to balance compile-time error detection, conciseness, and performance, have emerged. Scala, e.g., is interoperable with Java and has become an early leader in adoption, especially in the start-up and open-source spaces. Workshop participants experience Scala's value as a teaching language in the CS curriculum through four lecture-lab modules: In CS1, the read-eval-print loop and simple, uniform syntax aid programming in the small. In CS2, higher-order methods allow concise, efficient manipulation of collections. Advanced topics include domain-specific languages, concurrency, web apps/services, and mobile apps. Laptop recommended with Scala installed.},
 address = {ACM, 2 Penn Plaza, Suite 701, New York, NY 10121-0701, USA},
 author = {Lewis, Mark and Läufer, Konstantin and Thiruvathukal, George K.},
 booktitle = {{44th ACM technical symposium / Computer science education (SIGCSE '13)}},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 isbn = {978-1-4503-1868-6},
 title = {{Using Scala strategically across the undergraduate curriculum (abstract only)}},
 year = {2013},
 url = {https://ecommons.luc.edu/cs_facpubs/69/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/69/},
}

@misc{banna2021experience,
      abbr={Tech Report},
      title={An Experience Report on Machine Learning Reproducibility: Guidance for Practitioners and TensorFlow Model Garden Contributors}, 
      author={Vishnu Banna and Akhil Chinnakotla and Zhengxin Yan and Ani Vegesana and Naveen Vivek and Kruthi Krishnappa and Wenxin Jiang and Yung-Hsiang Lu and George K. Thiruvathukal and James C. Davis},
      year={2021},
      eprint={2107.00821},
      archivePrefix={arXiv},
      primaryClass={cs.SE},
      selected={true},
      pdf={https://arxiv.org/abs/2107.00821},
      abstract={ Machine learning techniques are becoming a fundamental tool for scientific and engineering progress. These techniques are applied in contexts as diverse as astronomy and spam filtering. However, correctly applying these techniques requires careful engineering. Much attention has been paid to the technical potential; relatively little attention has been paid to the software engineering process required to bring research-based machine learning techniques into practical utility. Technology companies have supported the engineering community through machine learning frameworks such as TensorFLow and PyTorch, but the details of how to engineer complex machine learning models in these frameworks have remained hidden.  To promote best practices within the engineering community, academic institutions and Google have partnered to launch a Special Interest Group on Machine Learning Models (SIGMODELS) whose goal is to develop exemplary implementations of prominent machine learning models in community locations such as the TensorFlow Model Garden (TFMG). The purpose of this report is to define a process for reproducing a state-of-the-art machine learning model at a level of quality suitable for inclusion in the TFMG. We define the engineering process and elaborate on each step, from paper analysis to model release. We report on our experiences implementing the YOLO model family with a team of 26 student researchers, share the tools we developed, and describe the lessons we learned along the way.}
}
@misc{west2020voltkey,
 abbr = {Tech Report},
 archiveprefix = {arXiv},
 author = {West, Jack and VoNguyen, Tien and Ahlgren, Isaac and Motyashok, Iryna and Thiruvathukal, George K. and Klingensmith, Neil},
 eprint = {2004.00092},
 html = {https://ecommons.luc.edu/cs_facpubs/245/},
 pdf = {https://arxiv.org/abs/2004.00092},
 primaryclass = {eess.SP},
 title = {VoltKey: Using Power Line Noise for Zero-Involvement Pairing and Authentication (Demo Abstract)},
 year = {2020}
}

@misc{ghodgaonkar2020observing,
 abbr = {Tech Report},
 abstract = {COVID-19 has resulted in a worldwide pandemic, leading to "lockdown" policies and social distancing. The pandemic has profoundly changed the world. Traditional methods for observing these historical events are difficult because sending reporters to areas with many infected people can put the reporters' lives in danger. New technologies are needed for safely observing responses to these policies. This paper reports using thousands of network cameras deployed worldwide for the purpose of witnessing activities in response to the policies. The network cameras can continuously provide real-time visual data (image and video) without human efforts. Thus, network cameras can be utilized to observe activities without risking the lives of reporters. This paper describes a project that uses network cameras to observe responses to governments' policies during the COVID-19 pandemic (March to April in 2020). The project discovers over 30,000 network cameras deployed in 110 countries. A set of computer tools are created to collect visual data from network cameras continuously during the pandemic. This paper describes the methods to discover network cameras on the Internet, the methods to collect and manage data, and preliminary results of data analysis. This project can be the foundation for observing the possible "second wave" in fall 2020. The data may be used for post-pandemic analysis by sociologists, public health experts, and meteorologists.},
 archiveprefix = {arXiv},
 author = {Ghodgaonkar, Isha and Goel, Abhinav and Bordwell,Fischer and Tung, Caleb and Aghajanzadeh,Sara and Curran,Noah and Chen, Ryan and Yu, Kaiwen and Mahapatra,Sneha and Banna, Vishnu and Kao, Gore and Lee, Kate and Hu, Xiao and Eliopolous, Nick and Chinnakotla, Akhil and Rijhwani, Damini and Kim, Ashley and Chakraborty, Aditya and Ward, Mark Daniel and Lu, Yung-Hsiang and Thiruvathukal, George K.},
 eprint = {2005.09091},
 html = {https://ecommons.luc.edu/cs_facpubs/247/},
 pdf = {https://arxiv.org/abs/2005.09091},
 primaryclass = {cs.CY},
 title = {Observing Responses to the COVID-19 Pandemic using Worldwide Network Cameras},
 year = {2020},
 selected = {true},
}

@misc{thiruvathukal2019benchmarking,
 abbr = {ArXiv},
 archiveprefix = {arXiv},
 author = {Thiruvathukal, George K. and Christensen, Cameron and Jin, Xiaoyong and  Tessier, François and Vishwanath, Venkatram},
 eprint = {1904.11812},
 html = {https://ecommons.luc.edu/cs_facpubs/219/},
 pdf = {https://ecommons.luc.edu/cs_facpubs/219/},
 primaryclass = {cs.DC},
 title = {A Benchmarking Study to Evaluate Apache Spark on Large-Scale Supercomputers},
 year = {2019}
}

@article{Smith2019,
 abbr = {Poster},
 abstrct = {This poster describes the progress of the Journal of Open Source Software (JOSS), a free, open-access journal designed to publish brief papers about research software. The primary purpose of JOSS is to enable developers of research software to receive citation credit equivalent to typical archival publications. JOSS papers are deliberately short and required to include a summary describing the purpose and high-level functionality of the software (written for a diverse, non-specialist audience), a statement of need, authors and their affiliations, and key references, as well as link to an archived version of the software (e.g., DOI obtained from Zenodo). Upon acceptance, papers receive a CrossRef DOI. Rather than a review of a lengthy software paper (including, e.g., methodology, validation, sample results), JOSS submissions undergo rigorous peer review of the article and software, including documentation, tests, continuous integration, and licensing. The JOSS review process is modeled on the established approach of the rOpenSci collaboration. The entire submission and review process occurs openly on GitHub; papers not yet accepted remain visible and under review until the authors make appropriate changes for acceptance—unlike other journals, papers requiring major revision are not rejected. JOSS was founded in May 2016, and in its first year published 111 articles in a variety of fields. Since then, JOSS has published over 494 articles (as of 23 Feb 2019), and submissions continue to grow.},
 author = {Smith, Arfon and Barba, Lorena A. and Katz, Daniel S. and Niemeyer, Kyle and Allard, Tania and Bazan, Juanjo and Brown, Jed and Clark, Jason and Guimera, Roman Valls and Gymrek, Melissa and Heagy, Lindsey and Huff, Kathryn and Thiruvathukal, George K. and Madan, Christopher and Moerman, Kevin and Pantano, Lorena and Pons,Viviane and Poulson, Jack and Prins, Pjotr and Ram, Karthik and Ramirez, Elizabeth and Rokem, Ariel and Thyng, Kristen and Yehudi, Yo},
 doi = {10.6084/m9.figshare.7763171.v1},
 html = {http://ecommons.luc.edu/cs_facpubs/218},
 month = {2},
 pdf = {https://figshare.com/articles/SIAM_CSE_2019_Minisymposterium_The_Journal_of_Open_Source_Software/7763171},
 title = {{SIAM CSE 2019 Minisymposterium: The Journal of Open Source Software}},
 url = {https://figshare.com/articles/poster/SIAM_CSE_2019_Minisymposterium_The_Journal_of_Open_Source_Software/7763171},
 year = {2019}
}

@techreport{jeffrey_carver_collaborative_2016,
 abbr = {Report},
 author = {Carver, Jeffrey C. and Thiruvathukal, George K.},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 institution = {{Figshare}},
 shorttitle = {{Collaborative Research}},
 title = {{Collaborative Research: Making Software Engineering Work for Computational Science \& Engineering: An Integrated Approach}},
 year = {2016}
}

@techreport{george_k_thiruvathukal_apt_2015,
 abbr = {User Manual},
 author = {Thiruvathukal, George K. and Verun, Ufuk},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 institution = {{Figshare}},
 title = {{Apt Compiler Toolkit (Legacy Document)}},
 year = {2015}
}

@techreport{george_k_thiruvathukal_ad_2003,
 abbr = {Report},
 author = {Thiruvathukal, George K.},
 abstract = {This is the final report for the Ad Hoc Human Interaction Nets project. All tasks described in our original proposal have been completed: Hybrid-Hierarchical Micro-Databases, Query Optimization, and XML for Embedded Systems. After meeting with the program manager, Tom Armour, in Washington, DC, we were able to get a better perspective on the ad hoc nature of the solicitation. Armed with this perspective, we were able to complete two substantial prototypes to address the four tasks as originally written that works with Pocket PC and Palm OS devices. We were able to evaluate the viability of the Sharp Zaurus platform as well but ultimately decided to limit our focus to Palm OS and Pocket PC devices, which appear to have the greatest market interest and viability at the time of writing. Acquiring the hardware enabled us to make substantial progress on the ad hoc networking issues. In our networking prototype, which is based on the Pocket PC platform, we were able to take advantage of the emerging. Net compact framework and use it to build a distributed services and database framework. In this report, we will describe the two concept prototypes that were developed to demonstrate the feasibility of ad hoc human interaction networks and then proceed with a brief discussion of each task as written in the original proposal.},
 address = {Ft. Belvoir},
 copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
 institution = {{Defense Technical Information Center}},
 title = {Ad {{Hoc Human Information Nets}} for {{Asymmetric Threat Surveillance}}.},
 urldate = {2018-01-07},
 year = {2003}
}

@phdthesis{george_k._thiruvathukal_enhanced_1995,
  title = {An Enhanced Actors Model and Programming Environment for Parallel and Distributed Processing},
  copyright = {Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License (CC-BY-NC-SA)},
  author = {Thiruvathukal, George K.},
  year = {1995},
  note = {OCLC: 36073344}
}

